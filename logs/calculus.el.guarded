package calculus :
  import 1000179 struct T(core, Type)<0> :
    length : long
    code : ptr<?>
    free : top ...
  import 1000237 struct T(core, Tuple)<1> :
    length : long
    var items : TV0 ...
  import 1000178 struct T(core, Box)<0> :
    item : top
  import 1000177 struct T(core, Fn)<0> :
    length : long
    code : ptr<?>
    free : top ...
  import 1000181 struct T(core, Stack)<0> :
    var size : long
    var frames : ptr<struct<T(core, StackFrame)>()>
    var stack-pointer : ptr<struct<T(core, StackFrame)>()>
    var pc : long
  import 1000180 struct T(core, StackFrame)<0> :
    var return : long
    var liveness-map : long
    var slots : long ...
  import 1000226 struct T(core, Char)<0> :
    value : byte
  import 1000225 struct T(core, Byte)<0> :
    value : byte
  import 1000227 struct T(core, Int)<0> :
    value : int
  import 1000228 struct T(core, Long)<0> :
    value : long
  import 1000229 struct T(core, Float)<0> :
    value : float
  import 1000230 struct T(core, Double)<0> :
    value : double
  import 1000236 struct T(core, False)<0> : ()
  import 1000235 struct T(core, True)<0> : ()
  import 1000238 type T(core, List)<1> : ()
  import 1000231 struct T(core, String)<0> :
    length : long
    var hash : int
    var chars : byte ...
  import 1000232 type T(core, Symbol)<0> : ()
  import 1000506 type T(core, Unique)<0> : ()
  import 1000507 struct T(core, LivenessTracker)<0> :
    value : or(ref<T(core, False)>(), ref<T(core, Unique)>())
    tail : ptr<?>
  import 1000193 lsfn(F<0,0>(core, arity-error, [long]) -> bot)
  import 1000195 fn(F<0,0>(core, no-method-error, [ref<T(core, String)>() ref<T(core, Tuple)>(top)]) -> bot)
  import 1000196 fn(F<0,0>(core, amb-method-error, [ref<T(core, String)>() ref<T(core, Tuple)>(top)]) -> bot)
  import 1000199 lsfn(F<0,0>(core, tuple-length-error, [long long]) -> bot)
  import 1000197 fn(F<0,0>(core, no-branch-error, [ref<T(core, Tuple)>(top)]) -> bot)
  import 1000198 fn(F<0,0>(core, amb-branch-error, [ref<T(core, Tuple)>(top)]) -> bot)
  import 1000202 lsfn(F<0,0>(core, cast-error, [ref<T(core, Type)>() top int]) -> bot)
  import 1000201 fn(F<0,0>(core, variable-uninitialized-error, [or(ref<T(core, False)>(), ref<T(core, String)>())]) -> bot)
  import 1000203 lsfn(F<0,0>(core, invalid-return-error, []) -> bot)
  import 1000817 lsfn(F<0,0>(core, void-tuple, [long]) -> ref<T(core, Tuple)>(top))
  import 1000264 lsfn(F<0,0>(core, initialize-constants, []) -> ref<T(core, False)>())
  import 1000277 lsfn(F<0,0>(core, extend-heap, [long]) -> long)
  import 1000297 lsfn(F<0,0>(core, extend-stack, [long]) -> long)
  import 1000216 lsfn(F<0,0>(core, print-stack-trace, [ref<T(core, Stack)>()]) -> ref<T(core, False)>())
  import 1000299 lsfn(F<0,0>(core, collect-garbage, [long]) -> long)
  import 1000224 lsfn(F<0,0>(core, class-name, [int]) -> ptr<byte>)
  import 1000824 lsfn(F<0,0>(core, String, [ptr<byte>]) -> ref<T(core, String)>())
  import 1000212 fn(F<0,0>(core, execute-toplevel-command, [arrow<(), ref<T(core, False)>()>]) -> or(ref<T(core, False)>(), ref<T(core, True)>()))
  import 1000566 type T(core, OutputStream)<0> : ()
  import 1000882 type T(core, Printable)<0> : ()
  import 1000450 multi(F<0,1>(core, less?, [ref<T(core, Comparable)>(?TV0) TV0]) -> or(ref<T(core, False)>(), ref<T(core, True)>()))
  import 1000448 type T(core, Comparable)<1> :
    T(core, Char)<0> <: ref<T(core, Comparable)>(ref<T(core, Char)>())
    T(core, Byte)<0> <: ref<T(core, Comparable)>(ref<T(core, Byte)>())
    T(core, Int)<0> <: ref<T(core, Comparable)>(ref<T(core, Int)>())
    T(core, Long)<0> <: ref<T(core, Comparable)>(ref<T(core, Long)>())
    T(core, Float)<0> <: ref<T(core, Comparable)>(ref<T(core, Float)>())
    T(core, Double)<0> <: ref<T(core, Comparable)>(ref<T(core, Double)>())
    T(core, Tuple)<1> <: ref<T(core, Comparable)>(ref<T(core, Tuple)>(TV0))
    T(core, String)<0> <: ref<T(core, Comparable)>(ref<T(core, String)>())
    T(core, Symbol)<0> <: ref<T(core, Comparable)>(ref<T(core, Symbol)>())
    T(core, List)<1> <: ref<T(core, Comparable)>(ref<T(core, List)>(TV0))
  import 1000883 fn(F<0,0>(core, modulo, [ref<T(core, String)>() ref<T(core, Seqable)>(top)]) -> ref<T(core, Printable)>())
  import 1001101 type T(core, Seqable)<1> :
    T(core, Collection)<1> <: ref<T(core, Seqable)>(TV0)
  import 1000567 multi(F<0,0>(core, print, [ref<T(core, OutputStream)>() top]) -> ref<T(core, False)>())
  import 1000455 multi(F<0,0>(core, equal?, [ref<T(core, Equalable)>() ref<T(core, Equalable)>()]) -> or(ref<T(core, False)>(), ref<T(core, True)>()))
  import 1000454 type T(core, Equalable)<0> :
    T(core, Char)<0> <: ref<T(core, Equalable)>()
    T(core, Byte)<0> <: ref<T(core, Equalable)>()
    T(core, Int)<0> <: ref<T(core, Equalable)>()
    T(core, Long)<0> <: ref<T(core, Equalable)>()
    T(core, Float)<0> <: ref<T(core, Equalable)>()
    T(core, Double)<0> <: ref<T(core, Equalable)>()
    T(core, Tuple)<1> <: ref<T(core, Equalable)>()
    T(core, String)<0> <: ref<T(core, Equalable)>()
    T(core, Symbol)<0> <: ref<T(core, Equalable)>()
    T(core, List)<1> <: ref<T(core, Equalable)>()
    T(core, True)<0> <: ref<T(core, Equalable)>()
    T(core, False)<0> <: ref<T(core, Equalable)>()
  import 1000601 fn(F<0,0>(core, println, [top]) -> ref<T(core, False)>())
  import 1001103 type-decl T(core, Collection)<1>
  export 1000000 private type T(calculus, Exp)<0> : ()
  export 1000001 private type T(calculus, Const)<0> <: ref<T(calculus, Exp)>() : ()
  export 1000002 private fn(F<0,0>(calculus, Const, [ref<T(core, Int)>()]) -> ref<T(calculus, Const)>())
  export 1000005 private multi(F<0,0>(calculus, value, [ref<T(calculus, Const)>()]) -> ref<T(core, Int)>())
  export 1000006 private type T(calculus, Variable)<0> <: ref<T(calculus, Exp)>() : ()
  export 1000007 private fn(F<0,0>(calculus, Variable, [ref<T(core, Symbol)>()]) -> ref<T(calculus, Variable)>())
  export 1000010 private multi(F<0,0>(calculus, name, [ref<T(calculus, Variable)>()]) -> ref<T(core, Symbol)>())
  export 1000011 private type T(calculus, Add)<0> <: ref<T(calculus, Exp)>() : ()
  export 1000012 private fn(F<0,0>(calculus, Add, [ref<T(calculus, Exp)>() ref<T(calculus, Exp)>()]) -> ref<T(calculus, Add)>())
  export 1000017 private multi(F<0,0>(calculus, a, [ref<T(calculus, Add)>()]) -> ref<T(calculus, Exp)>())
  export 1000018 private multi(F<0,0>(calculus, b, [ref<T(calculus, Add)>()]) -> ref<T(calculus, Exp)>())
  export 1000019 private type T(calculus, Subtract)<0> <: ref<T(calculus, Exp)>() : ()
  export 1000020 private fn(F<0,0>(calculus, Subtract, [ref<T(calculus, Exp)>() ref<T(calculus, Exp)>()]) -> ref<T(calculus, Subtract)>())
  export 1000025 private multi(F<0,0>(calculus, a, [ref<T(calculus, Subtract)>()]) -> ref<T(calculus, Exp)>())
  export 1000026 private multi(F<0,0>(calculus, b, [ref<T(calculus, Subtract)>()]) -> ref<T(calculus, Exp)>())
  export 1000027 private type T(calculus, Multiply)<0> <: ref<T(calculus, Exp)>() : ()
  export 1000028 private fn(F<0,0>(calculus, Multiply, [ref<T(calculus, Exp)>() ref<T(calculus, Exp)>()]) -> ref<T(calculus, Multiply)>())
  export 1000033 private multi(F<0,0>(calculus, a, [ref<T(calculus, Multiply)>()]) -> ref<T(calculus, Exp)>())
  export 1000034 private multi(F<0,0>(calculus, b, [ref<T(calculus, Multiply)>()]) -> ref<T(calculus, Exp)>())
  export 1000035 private type T(calculus, Divide)<0> <: ref<T(calculus, Exp)>() : ()
  export 1000036 private fn(F<0,0>(calculus, Divide, [ref<T(calculus, Exp)>() ref<T(calculus, Exp)>()]) -> ref<T(calculus, Divide)>())
  export 1000041 private multi(F<0,0>(calculus, a, [ref<T(calculus, Divide)>()]) -> ref<T(calculus, Exp)>())
  export 1000042 private multi(F<0,0>(calculus, b, [ref<T(calculus, Divide)>()]) -> ref<T(calculus, Exp)>())
  export 1000043 private type T(calculus, Power)<0> <: ref<T(calculus, Exp)>() : ()
  export 1000044 private fn(F<0,0>(calculus, Power, [ref<T(calculus, Exp)>() ref<T(calculus, Exp)>()]) -> ref<T(calculus, Power)>())
  export 1000049 private multi(F<0,0>(calculus, a, [ref<T(calculus, Power)>()]) -> ref<T(calculus, Exp)>())
  export 1000050 private multi(F<0,0>(calculus, b, [ref<T(calculus, Power)>()]) -> ref<T(calculus, Exp)>())
  export 1000051 private type T(calculus, Log)<0> <: ref<T(calculus, Exp)>() : ()
  export 1000052 private fn(F<0,0>(calculus, Log, [ref<T(calculus, Exp)>()]) -> ref<T(calculus, Log)>())
  export 1000055 private multi(F<0,0>(calculus, a, [ref<T(calculus, Log)>()]) -> ref<T(calculus, Exp)>())
  export 1000056 private fn(F<0,0>(calculus, precedence, [ref<T(calculus, Exp)>()]) -> ref<T(core, Int)>())
  export 1000080 private fn(F<0,0>(calculus, plus, [ref<T(calculus, Exp)>() ref<T(calculus, Exp)>()]) -> ref<T(calculus, Add)>())
  export 1000083 private fn(F<0,0>(calculus, minus, [ref<T(calculus, Exp)>() ref<T(calculus, Exp)>()]) -> ref<T(calculus, Subtract)>())
  export 1000086 private fn(F<0,0>(calculus, times, [ref<T(calculus, Exp)>() ref<T(calculus, Exp)>()]) -> ref<T(calculus, Multiply)>())
  export 1000089 private fn(F<0,0>(calculus, divide, [ref<T(calculus, Exp)>() ref<T(calculus, Exp)>()]) -> ref<T(calculus, Divide)>())
  export 1000092 private fn(F<0,0>(calculus, bit-xor, [ref<T(calculus, Exp)>() ref<T(calculus, Exp)>()]) -> ref<T(calculus, Power)>())
  export 1000095 private fn(F<0,0>(calculus, ln, [ref<T(calculus, Exp)>()]) -> ref<T(calculus, Log)>())
  export 1000097 private fn(F<0,0>(calculus, differentiate, [ref<T(calculus, Exp)>() ref<T(core, Symbol)>()]) -> ref<T(calculus, Exp)>())
  export 1000114 private fn(F<0,0>(calculus, map, [arrow<(ref<T(calculus, Exp)>()), ref<T(calculus, Exp)>()> ref<T(calculus, Exp)>()]) -> ref<T(calculus, Exp)>())
  export 1000124 private fn(F<0,0>(calculus, simplify, [ref<T(calculus, Exp)>()]) -> or(ref<T(calculus, Add)>(), ref<T(calculus, Const)>(), ref<T(calculus, Divide)>(), ref<T(calculus, Exp)>(), ref<T(calculus, Log)>(), ref<T(calculus, Multiply)>(), ref<T(calculus, Power)>(), ref<T(calculus, Subtract)>()))
  export 1000168 private fn(F<0,0>(calculus, main, []) -> ref<T(core, False)>())
  deftype T1000000 ()
  deftype T1000001 <: ref<T1000000> ()
  defn V1000002 fn<> (V1000003:ref<T1000227>) -> ref<T1000001> :
    defval V1002410:ref<T1000001>
    defobj O1002409 <: ref<T1000001> :
      defmethod V1000005<> (this = V1000004) fn<> (V1000004:ref<T1000001>) -> and(ref<T1000227>, ref<T1000227>) :
        check(return) V1000003 : and(ref<T1000227>, ref<T1000227>)
        return V1000003
    V1002410 = new O1002409
    check(return) V1002410 : ref<T1000001>
    return V1002410
  defmulti V1000005<> (ref<T1000001>) -> ref<T1000227>
  deftype T1000006 <: ref<T1000000> ()
  defn V1000007 fn<> (V1000008:ref<T1000232>) -> ref<T1000006> :
    defval V1002412:ref<T1000006>
    defobj O1002411 <: ref<T1000006> :
      defmethod V1000010<> (this = V1000009) fn<> (V1000009:ref<T1000006>) -> and(ref<T1000232>, ref<T1000232>) :
        check(return) V1000008 : and(ref<T1000232>, ref<T1000232>)
        return V1000008
    V1002412 = new O1002411
    check(return) V1002412 : ref<T1000006>
    return V1002412
  defmulti V1000010<> (ref<T1000006>) -> ref<T1000232>
  deftype T1000011 <: ref<T1000000> ()
  defn V1000012 fn<> (V1000013:ref<T1000000>, V1000014:ref<T1000000>) -> ref<T1000011> :
    defval V1002414:ref<T1000011>
    defobj O1002413 <: ref<T1000011> :
      defmethod V1000017<> (this = V1000015) fn<> (V1000015:ref<T1000011>) -> and(ref<T1000000>, ref<T1000000>) :
        check(return) V1000013 : and(ref<T1000000>, ref<T1000000>)
        return V1000013
      defmethod V1000018<> (this = V1000016) fn<> (V1000016:ref<T1000011>) -> and(ref<T1000000>, ref<T1000000>) :
        check(return) V1000014 : and(ref<T1000000>, ref<T1000000>)
        return V1000014
    V1002414 = new O1002413
    check(return) V1002414 : ref<T1000011>
    return V1002414
  defmulti V1000017<> (ref<T1000011>) -> ref<T1000000>
  defmulti V1000018<> (ref<T1000011>) -> ref<T1000000>
  deftype T1000019 <: ref<T1000000> ()
  defn V1000020 fn<> (V1000021:ref<T1000000>, V1000022:ref<T1000000>) -> ref<T1000019> :
    defval V1002416:ref<T1000019>
    defobj O1002415 <: ref<T1000019> :
      defmethod V1000025<> (this = V1000023) fn<> (V1000023:ref<T1000019>) -> and(ref<T1000000>, ref<T1000000>) :
        check(return) V1000021 : and(ref<T1000000>, ref<T1000000>)
        return V1000021
      defmethod V1000026<> (this = V1000024) fn<> (V1000024:ref<T1000019>) -> and(ref<T1000000>, ref<T1000000>) :
        check(return) V1000022 : and(ref<T1000000>, ref<T1000000>)
        return V1000022
    V1002416 = new O1002415
    check(return) V1002416 : ref<T1000019>
    return V1002416
  defmulti V1000025<> (ref<T1000019>) -> ref<T1000000>
  defmulti V1000026<> (ref<T1000019>) -> ref<T1000000>
  deftype T1000027 <: ref<T1000000> ()
  defn V1000028 fn<> (V1000029:ref<T1000000>, V1000030:ref<T1000000>) -> ref<T1000027> :
    defval V1002418:ref<T1000027>
    defobj O1002417 <: ref<T1000027> :
      defmethod V1000033<> (this = V1000031) fn<> (V1000031:ref<T1000027>) -> and(ref<T1000000>, ref<T1000000>) :
        check(return) V1000029 : and(ref<T1000000>, ref<T1000000>)
        return V1000029
      defmethod V1000034<> (this = V1000032) fn<> (V1000032:ref<T1000027>) -> and(ref<T1000000>, ref<T1000000>) :
        check(return) V1000030 : and(ref<T1000000>, ref<T1000000>)
        return V1000030
    V1002418 = new O1002417
    check(return) V1002418 : ref<T1000027>
    return V1002418
  defmulti V1000033<> (ref<T1000027>) -> ref<T1000000>
  defmulti V1000034<> (ref<T1000027>) -> ref<T1000000>
  deftype T1000035 <: ref<T1000000> ()
  defn V1000036 fn<> (V1000037:ref<T1000000>, V1000038:ref<T1000000>) -> ref<T1000035> :
    defval V1002420:ref<T1000035>
    defobj O1002419 <: ref<T1000035> :
      defmethod V1000041<> (this = V1000039) fn<> (V1000039:ref<T1000035>) -> and(ref<T1000000>, ref<T1000000>) :
        check(return) V1000037 : and(ref<T1000000>, ref<T1000000>)
        return V1000037
      defmethod V1000042<> (this = V1000040) fn<> (V1000040:ref<T1000035>) -> and(ref<T1000000>, ref<T1000000>) :
        check(return) V1000038 : and(ref<T1000000>, ref<T1000000>)
        return V1000038
    V1002420 = new O1002419
    check(return) V1002420 : ref<T1000035>
    return V1002420
  defmulti V1000041<> (ref<T1000035>) -> ref<T1000000>
  defmulti V1000042<> (ref<T1000035>) -> ref<T1000000>
  deftype T1000043 <: ref<T1000000> ()
  defn V1000044 fn<> (V1000045:ref<T1000000>, V1000046:ref<T1000000>) -> ref<T1000043> :
    defval V1002422:ref<T1000043>
    defobj O1002421 <: ref<T1000043> :
      defmethod V1000049<> (this = V1000047) fn<> (V1000047:ref<T1000043>) -> and(ref<T1000000>, ref<T1000000>) :
        check(return) V1000045 : and(ref<T1000000>, ref<T1000000>)
        return V1000045
      defmethod V1000050<> (this = V1000048) fn<> (V1000048:ref<T1000043>) -> and(ref<T1000000>, ref<T1000000>) :
        check(return) V1000046 : and(ref<T1000000>, ref<T1000000>)
        return V1000046
    V1002422 = new O1002421
    check(return) V1002422 : ref<T1000043>
    return V1002422
  defmulti V1000049<> (ref<T1000043>) -> ref<T1000000>
  defmulti V1000050<> (ref<T1000043>) -> ref<T1000000>
  deftype T1000051 <: ref<T1000000> ()
  defn V1000052 fn<> (V1000053:ref<T1000000>) -> ref<T1000051> :
    defval V1002424:ref<T1000051>
    defobj O1002423 <: ref<T1000051> :
      defmethod V1000055<> (this = V1000054) fn<> (V1000054:ref<T1000051>) -> and(ref<T1000000>, ref<T1000000>) :
        check(return) V1000053 : and(ref<T1000000>, ref<T1000000>)
        return V1000053
    V1002424 = new O1002423
    check(return) V1002424 : ref<T1000051>
    return V1002424
  defmulti V1000055<> (ref<T1000051>) -> ref<T1000000>
  defn V1000056 fn<> (V1000057:ref<T1000000>) -> ref<T1000227> :
    defval V1000058:or(ref<T1000011>, ref<T1000019>)
    defval V1000059:or(or(ref<T1000027>, ref<T1000035>), ref<T1000043>)
    defval V1000060:ref<T1000043>
    defval V1000061:or(or(ref<T1000001>, ref<T1000006>), ref<T1000051>)
    match(V1000057) :
      (or(ref<T1000011>, ref<T1000019>)) : goto L1002425
      (or(or(ref<T1000027>, ref<T1000035>), ref<T1000043>)) : goto L1002426
      (ref<T1000043>) : goto L1002427
      (or(or(ref<T1000001>, ref<T1000006>), ref<T1000051>)) : goto L1002428
    label L1002425
    check(def) V1000057 : or(ref<T1000011>, ref<T1000019>)
    V1000058 = V1000057
    check(return) V{0} : ref<T1000227>
    return V{0}
    label L1002426
    check(def) V1000057 : or(or(ref<T1000027>, ref<T1000035>), ref<T1000043>)
    V1000059 = V1000057
    check(return) V{1} : ref<T1000227>
    return V{1}
    label L1002427
    check(def) V1000057 : ref<T1000043>
    V1000060 = V1000057
    check(return) V{2} : ref<T1000227>
    return V{2}
    label L1002428
    check(def) V1000057 : or(or(ref<T1000001>, ref<T1000006>), ref<T1000051>)
    V1000061 = V1000057
    check(return) V{3} : ref<T1000227>
    return V{3}
  defmethod V1000567<> (id = V1001563) fn<> (V1000062:ref<T1000566>, V1000063:ref<T1000000>) -> and(ref<T1000236>, ref<T1000236>) :
    defval V1000072:ref<T1000001>
    defval V1002452:ref<T1000227>
    defval V1002453:ref<T1000236>
    defval V1000073:ref<T1000006>
    defval V1002454:ref<T1000232>
    defval V1002455:ref<T1000236>
    defval V1000074:ref<T1000051>
    defval V1002456:ref<T1000237>
    defval V1002457:ref<T1000000>
    defval V1002458:ref<T1000882>
    defval V1002459:ref<T1000236>
    defval V1000075:ref<T1000011>
    defval V1002460:ref<T1000000>
    defval V1002461:ref<T1000000>
    defval V1002462:ref<T1000236>
    defval V1000076:ref<T1000019>
    defval V1002463:ref<T1000000>
    defval V1002464:ref<T1000000>
    defval V1002465:ref<T1000236>
    defval V1000077:ref<T1000027>
    defval V1002466:ref<T1000000>
    defval V1002467:ref<T1000000>
    defval V1002468:ref<T1000236>
    defval V1000078:ref<T1000035>
    defval V1002469:ref<T1000000>
    defval V1002470:ref<T1000000>
    defval V1002471:ref<T1000236>
    defval V1000079:ref<T1000043>
    defval V1002472:ref<T1000000>
    defval V1002473:ref<T1000000>
    defval V1002474:ref<T1000236>
    defn V1000064 fn<> (V1000065:ref<T1000000>) -> ref<T1000236> :
      defval V1002432:ref<T1000227>
      defval V1002433:ref<T1000227>
      defval V1002434:or(ref<T1000235>, ref<T1000236>)
      defval V1000066:ref<T1000235>
      defval V1002436:ref<T1000237>
      defval V1002437:ref<T1000882>
      defval V1002438:ref<T1000236>
      defval V1000067:ref<T1000236>
      defval V1002439:ref<T1000236>
      check(arg) V1000065 : ref<T1000000>
      V1002432 = call stanza V1000056(V1000065)
      check(return) V1002432 : ref<T1000227>
      check(arg) V1000063 : ref<T1000000>
      V1002433 = call stanza V1000056(V1000063)
      check(return) V1002433 : ref<T1000227>
      check(arg) V1002432 : ref<T1000448>
      check(arg) V1002433 : ref<T1000227>
      V1002434 = call stanza V1000450<ref<T1000227>>(V1002432, V1002433)
      check(return) V1002434 : or(ref<T1000236>, ref<T1000235>)
      check(cast) V1002434 : or(ref<T1000235>, ref<T1000236>)
      match(V1002434) :
        (ref<T1000235>) : goto L1002430
        (ref<T1000236>) : goto L1002431
      label L1002430
      check(def) V1002434 : ref<T1000235>
      V1000066 = V1002434
      V1002436 = tuple [V1000065]
      check(arg) V{"(%_)"} : ref<T1000231>
      check(arg) V1002436 : ref<T1001101>
      V1002437 = call stanza V1000883(V{"(%_)"}, V1002436)
      check(return) V1002437 : ref<T1000882>
      check(arg) V1000062 : ref<T1000566>
      check(arg) V1002437 : top
      V1002438 = call stanza V1000567(V1000062, V1002437)
      check(return) V1002438 : ref<T1000236>
      check(return) V1002438 : ref<T1000236>
      return V1002438
      label L1002431
      check(def) V1002434 : ref<T1000236>
      V1000067 = V1002434
      check(arg) V1000062 : ref<T1000566>
      check(arg) V1000065 : top
      V1002439 = call stanza V1000567(V1000062, V1000065)
      check(return) V1002439 : ref<T1000236>
      check(return) V1002439 : ref<T1000236>
      return V1002439
    defn V1000068 fn<> (V1000069:ref<T1000000>, V1000070:ref<T1000231>, V1000071:ref<T1000000>) -> ref<T1000236> :
      defval V1002440:ref<T1000236>
      defval V1002441:ref<T1000236>
      defval V1002442:ref<T1000236>
      check(arg) V1000069 : ref<T1000000>
      V1002440 = call stanza V1000064(V1000069)
      check(return) V1002440 : ref<T1000236>
      check(arg) V1000062 : ref<T1000566>
      check(arg) V1000070 : top
      V1002441 = call stanza V1000567(V1000062, V1000070)
      check(return) V1002441 : ref<T1000236>
      check(arg) V1000071 : ref<T1000000>
      V1002442 = call stanza V1000064(V1000071)
      check(return) V1002442 : ref<T1000236>
      check(return) V1002442 : ref<T1000236>
      return V1002442
    init-closures (V1000064, V1000068)
    match(V1000063) :
      (ref<T1000001>) : goto L1002443
      (ref<T1000006>) : goto L1002444
      (ref<T1000051>) : goto L1002445
      (ref<T1000011>) : goto L1002446
      (ref<T1000019>) : goto L1002447
      (ref<T1000027>) : goto L1002448
      (ref<T1000035>) : goto L1002449
      (ref<T1000043>) : goto L1002450
    label L1002443
    check(def) V1000063 : ref<T1000001>
    V1000072 = V1000063
    check(arg) V1000072 : ref<T1000001>
    V1002452 = call stanza V1000005(V1000072)
    check(return) V1002452 : ref<T1000227>
    check(arg) V1000062 : ref<T1000566>
    check(arg) V1002452 : top
    V1002453 = call stanza V1000567(V1000062, V1002452)
    check(return) V1002453 : ref<T1000236>
    check(return) V1002453 : and(ref<T1000236>, ref<T1000236>)
    return V1002453
    label L1002444
    check(def) V1000063 : ref<T1000006>
    V1000073 = V1000063
    check(arg) V1000073 : ref<T1000006>
    V1002454 = call stanza V1000010(V1000073)
    check(return) V1002454 : ref<T1000232>
    check(arg) V1000062 : ref<T1000566>
    check(arg) V1002454 : top
    V1002455 = call stanza V1000567(V1000062, V1002454)
    check(return) V1002455 : ref<T1000236>
    check(return) V1002455 : and(ref<T1000236>, ref<T1000236>)
    return V1002455
    label L1002445
    check(def) V1000063 : ref<T1000051>
    V1000074 = V1000063
    check(arg) V1000074 : ref<T1000051>
    V1002457 = call stanza V1000055(V1000074)
    check(return) V1002457 : ref<T1000000>
    V1002456 = tuple [V1002457]
    check(arg) V{"ln(%_)"} : ref<T1000231>
    check(arg) V1002456 : ref<T1001101>
    V1002458 = call stanza V1000883(V{"ln(%_)"}, V1002456)
    check(return) V1002458 : ref<T1000882>
    check(arg) V1000062 : ref<T1000566>
    check(arg) V1002458 : top
    V1002459 = call stanza V1000567(V1000062, V1002458)
    check(return) V1002459 : ref<T1000236>
    check(return) V1002459 : and(ref<T1000236>, ref<T1000236>)
    return V1002459
    label L1002446
    check(def) V1000063 : ref<T1000011>
    V1000075 = V1000063
    check(arg) V1000075 : ref<T1000011>
    V1002460 = call stanza V1000017(V1000075)
    check(return) V1002460 : ref<T1000000>
    check(arg) V1000075 : ref<T1000011>
    V1002461 = call stanza V1000018(V1000075)
    check(return) V1002461 : ref<T1000000>
    check(arg) V1002460 : ref<T1000000>
    check(arg) V{" + "} : ref<T1000231>
    check(arg) V1002461 : ref<T1000000>
    V1002462 = call stanza V1000068(V1002460, V{" + "}, V1002461)
    check(return) V1002462 : ref<T1000236>
    check(return) V1002462 : and(ref<T1000236>, ref<T1000236>)
    return V1002462
    label L1002447
    check(def) V1000063 : ref<T1000019>
    V1000076 = V1000063
    check(arg) V1000076 : ref<T1000019>
    V1002463 = call stanza V1000025(V1000076)
    check(return) V1002463 : ref<T1000000>
    check(arg) V1000076 : ref<T1000019>
    V1002464 = call stanza V1000026(V1000076)
    check(return) V1002464 : ref<T1000000>
    check(arg) V1002463 : ref<T1000000>
    check(arg) V{" - "} : ref<T1000231>
    check(arg) V1002464 : ref<T1000000>
    V1002465 = call stanza V1000068(V1002463, V{" - "}, V1002464)
    check(return) V1002465 : ref<T1000236>
    check(return) V1002465 : and(ref<T1000236>, ref<T1000236>)
    return V1002465
    label L1002448
    check(def) V1000063 : ref<T1000027>
    V1000077 = V1000063
    check(arg) V1000077 : ref<T1000027>
    V1002466 = call stanza V1000033(V1000077)
    check(return) V1002466 : ref<T1000000>
    check(arg) V1000077 : ref<T1000027>
    V1002467 = call stanza V1000034(V1000077)
    check(return) V1002467 : ref<T1000000>
    check(arg) V1002466 : ref<T1000000>
    check(arg) V{" * "} : ref<T1000231>
    check(arg) V1002467 : ref<T1000000>
    V1002468 = call stanza V1000068(V1002466, V{" * "}, V1002467)
    check(return) V1002468 : ref<T1000236>
    check(return) V1002468 : and(ref<T1000236>, ref<T1000236>)
    return V1002468
    label L1002449
    check(def) V1000063 : ref<T1000035>
    V1000078 = V1000063
    check(arg) V1000078 : ref<T1000035>
    V1002469 = call stanza V1000041(V1000078)
    check(return) V1002469 : ref<T1000000>
    check(arg) V1000078 : ref<T1000035>
    V1002470 = call stanza V1000042(V1000078)
    check(return) V1002470 : ref<T1000000>
    check(arg) V1002469 : ref<T1000000>
    check(arg) V{" / "} : ref<T1000231>
    check(arg) V1002470 : ref<T1000000>
    V1002471 = call stanza V1000068(V1002469, V{" / "}, V1002470)
    check(return) V1002471 : ref<T1000236>
    check(return) V1002471 : and(ref<T1000236>, ref<T1000236>)
    return V1002471
    label L1002450
    check(def) V1000063 : ref<T1000043>
    V1000079 = V1000063
    check(arg) V1000079 : ref<T1000043>
    V1002472 = call stanza V1000049(V1000079)
    check(return) V1002472 : ref<T1000000>
    check(arg) V1000079 : ref<T1000043>
    V1002473 = call stanza V1000050(V1000079)
    check(return) V1002473 : ref<T1000000>
    check(arg) V1002472 : ref<T1000000>
    check(arg) V{" ^ "} : ref<T1000231>
    check(arg) V1002473 : ref<T1000000>
    V1002474 = call stanza V1000068(V1002472, V{" ^ "}, V1002473)
    check(return) V1002474 : ref<T1000236>
    check(return) V1002474 : and(ref<T1000236>, ref<T1000236>)
    return V1002474
  defn V1000080 fn<> (V1000081:ref<T1000000>, V1000082:ref<T1000000>) -> ref<T1000011> :
    defval V1002475:ref<T1000011>
    check(arg) V1000081 : ref<T1000000>
    check(arg) V1000082 : ref<T1000000>
    V1002475 = call stanza V1000012(V1000081, V1000082)
    check(return) V1002475 : ref<T1000011>
    check(return) V1002475 : ref<T1000011>
    return V1002475
  defn V1000083 fn<> (V1000084:ref<T1000000>, V1000085:ref<T1000000>) -> ref<T1000019> :
    defval V1002476:ref<T1000019>
    check(arg) V1000084 : ref<T1000000>
    check(arg) V1000085 : ref<T1000000>
    V1002476 = call stanza V1000020(V1000084, V1000085)
    check(return) V1002476 : ref<T1000019>
    check(return) V1002476 : ref<T1000019>
    return V1002476
  defn V1000086 fn<> (V1000087:ref<T1000000>, V1000088:ref<T1000000>) -> ref<T1000027> :
    defval V1002477:ref<T1000027>
    check(arg) V1000087 : ref<T1000000>
    check(arg) V1000088 : ref<T1000000>
    V1002477 = call stanza V1000028(V1000087, V1000088)
    check(return) V1002477 : ref<T1000027>
    check(return) V1002477 : ref<T1000027>
    return V1002477
  defn V1000089 fn<> (V1000090:ref<T1000000>, V1000091:ref<T1000000>) -> ref<T1000035> :
    defval V1002478:ref<T1000035>
    check(arg) V1000090 : ref<T1000000>
    check(arg) V1000091 : ref<T1000000>
    V1002478 = call stanza V1000036(V1000090, V1000091)
    check(return) V1002478 : ref<T1000035>
    check(return) V1002478 : ref<T1000035>
    return V1002478
  defn V1000092 fn<> (V1000093:ref<T1000000>, V1000094:ref<T1000000>) -> ref<T1000043> :
    defval V1002479:ref<T1000043>
    check(arg) V1000093 : ref<T1000000>
    check(arg) V1000094 : ref<T1000000>
    V1002479 = call stanza V1000044(V1000093, V1000094)
    check(return) V1002479 : ref<T1000043>
    check(return) V1002479 : ref<T1000043>
    return V1002479
  defn V1000095 fn<> (V1000096:ref<T1000000>) -> ref<T1000051> :
    defval V1002480:ref<T1000051>
    check(arg) V1000096 : ref<T1000000>
    V1002480 = call stanza V1000052(V1000096)
    check(return) V1002480 : ref<T1000051>
    check(return) V1002480 : ref<T1000051>
    return V1002480
  defn V1000097 fn<> (V1000098:ref<T1000000>, V1000099:ref<T1000232>) -> ref<T1000000> :
    defval V1000102:ref<T1000001>
    defval V1002491:ref<T1000001>
    defval V1000103:ref<T1000006>
    defval V1002494:ref<T1000232>
    defval V1002495:or(ref<T1000235>, ref<T1000236>)
    defval V1000104:ref<T1000235>
    defval V1002497:ref<T1000001>
    defval V1000105:ref<T1000236>
    defval V1002498:ref<T1000001>
    defval V1000106:ref<T1000011>
    defval V1002499:ref<T1000000>
    defval V1002500:ref<T1000000>
    defval V1002501:ref<T1000000>
    defval V1002502:ref<T1000000>
    defval V1002503:ref<T1000011>
    defval V1000107:ref<T1000019>
    defval V1002504:ref<T1000000>
    defval V1002505:ref<T1000000>
    defval V1002506:ref<T1000000>
    defval V1002507:ref<T1000000>
    defval V1002508:ref<T1000019>
    defval V1000108:ref<T1000027>
    defval V1002509:ref<T1000000>
    defval V1002510:ref<T1000000>
    defval V1002511:ref<T1000000>
    defval V1002512:ref<T1000027>
    defval V1002513:ref<T1000000>
    defval V1002514:ref<T1000000>
    defval V1002515:ref<T1000000>
    defval V1002516:ref<T1000027>
    defval V1002517:ref<T1000011>
    defval V1000109:ref<T1000035>
    defval V1000110:ref<T1000019>
    defval V1002518:ref<T1000000>
    defval V1002519:ref<T1000000>
    defval V1002520:ref<T1000000>
    defval V1002521:ref<T1000027>
    defval V1002522:ref<T1000000>
    defval V1002523:ref<T1000000>
    defval V1002524:ref<T1000000>
    defval V1002525:ref<T1000027>
    defval V1002526:ref<T1000019>
    defval V1000111:ref<T1000043>
    defval V1002527:ref<T1000000>
    defval V1002528:ref<T1000001>
    defval V1002529:ref<T1000043>
    defval V1002530:ref<T1000035>
    defval V1000112:ref<T1000043>
    defval V1002531:ref<T1000000>
    defval V1002532:ref<T1000000>
    defval V1002533:ref<T1000000>
    defval V1002534:ref<T1000027>
    defval V1002535:ref<T1000000>
    defval V1002536:ref<T1000035>
    defval V1002537:ref<T1000000>
    defval V1002538:ref<T1000051>
    defval V1002539:ref<T1000000>
    defval V1002540:ref<T1000000>
    defval V1002541:ref<T1000027>
    defval V1002542:ref<T1000011>
    defval V1002543:ref<T1000027>
    defval V1000113:ref<T1000051>
    defval V1002544:ref<T1000000>
    defval V1002545:ref<T1000000>
    defval V1002546:ref<T1000000>
    defval V1002547:ref<T1000035>
    defn V1000100 fn<> (V1000101:ref<T1000000>) -> ref<T1000000> :
      defval V1002481:ref<T1000000>
      check(arg) V1000101 : ref<T1000000>
      check(arg) V1000099 : ref<T1000232>
      V1002481 = call stanza V1000097(V1000101, V1000099)
      check(return) V1002481 : ref<T1000000>
      check(return) V1002481 : ref<T1000000>
      return V1002481
    init-closures (V1000100)
    match(V1000098) :
      (ref<T1000001>) : goto L1002482
      (ref<T1000006>) : goto L1002483
      (ref<T1000011>) : goto L1002484
      (ref<T1000019>) : goto L1002485
      (ref<T1000027>) : goto L1002486
      (ref<T1000035>) : goto L1002487
      (ref<T1000043>) : goto L1002488
      (ref<T1000051>) : goto L1002489
    label L1002482
    check(def) V1000098 : ref<T1000001>
    V1000102 = V1000098
    check(arg) V{0} : ref<T1000227>
    V1002491 = call stanza V1000002(V{0})
    check(return) V1002491 : ref<T1000001>
    check(return) V1002491 : ref<T1000000>
    return V1002491
    label L1002483
    check(def) V1000098 : ref<T1000006>
    V1000103 = V1000098
    check(arg) V1000103 : ref<T1000006>
    V1002494 = call stanza V1000010(V1000103)
    check(return) V1002494 : ref<T1000232>
    check(arg) V1002494 : ref<T1000454>
    check(arg) V1000099 : ref<T1000454>
    V1002495 = call stanza V1000455(V1002494, V1000099)
    check(return) V1002495 : or(ref<T1000236>, ref<T1000235>)
    check(cast) V1002495 : or(ref<T1000235>, ref<T1000236>)
    match(V1002495) :
      (ref<T1000235>) : goto L1002492
      (ref<T1000236>) : goto L1002493
    label L1002492
    check(def) V1002495 : ref<T1000235>
    V1000104 = V1002495
    check(arg) V{1} : ref<T1000227>
    V1002497 = call stanza V1000002(V{1})
    check(return) V1002497 : ref<T1000001>
    check(return) V1002497 : ref<T1000000>
    return V1002497
    label L1002493
    check(def) V1002495 : ref<T1000236>
    V1000105 = V1002495
    check(arg) V{0} : ref<T1000227>
    V1002498 = call stanza V1000002(V{0})
    check(return) V1002498 : ref<T1000001>
    check(return) V1002498 : ref<T1000000>
    return V1002498
    label L1002484
    check(def) V1000098 : ref<T1000011>
    V1000106 = V1000098
    check(arg) V1000106 : ref<T1000011>
    V1002499 = call stanza V1000017(V1000106)
    check(return) V1002499 : ref<T1000000>
    check(arg) V1002499 : ref<T1000000>
    V1002500 = call stanza V1000100(V1002499)
    check(return) V1002500 : ref<T1000000>
    check(arg) V1000106 : ref<T1000011>
    V1002501 = call stanza V1000018(V1000106)
    check(return) V1002501 : ref<T1000000>
    check(arg) V1002501 : ref<T1000000>
    V1002502 = call stanza V1000100(V1002501)
    check(return) V1002502 : ref<T1000000>
    check(arg) V1002500 : ref<T1000000>
    check(arg) V1002502 : ref<T1000000>
    V1002503 = call stanza V1000080(V1002500, V1002502)
    check(return) V1002503 : ref<T1000011>
    check(return) V1002503 : ref<T1000000>
    return V1002503
    label L1002485
    check(def) V1000098 : ref<T1000019>
    V1000107 = V1000098
    check(arg) V1000107 : ref<T1000019>
    V1002504 = call stanza V1000025(V1000107)
    check(return) V1002504 : ref<T1000000>
    check(arg) V1002504 : ref<T1000000>
    V1002505 = call stanza V1000100(V1002504)
    check(return) V1002505 : ref<T1000000>
    check(arg) V1000107 : ref<T1000019>
    V1002506 = call stanza V1000026(V1000107)
    check(return) V1002506 : ref<T1000000>
    check(arg) V1002506 : ref<T1000000>
    V1002507 = call stanza V1000100(V1002506)
    check(return) V1002507 : ref<T1000000>
    check(arg) V1002505 : ref<T1000000>
    check(arg) V1002507 : ref<T1000000>
    V1002508 = call stanza V1000083(V1002505, V1002507)
    check(return) V1002508 : ref<T1000019>
    check(return) V1002508 : ref<T1000000>
    return V1002508
    label L1002486
    check(def) V1000098 : ref<T1000027>
    V1000108 = V1000098
    check(arg) V1000108 : ref<T1000027>
    V1002509 = call stanza V1000033(V1000108)
    check(return) V1002509 : ref<T1000000>
    check(arg) V1000108 : ref<T1000027>
    V1002510 = call stanza V1000034(V1000108)
    check(return) V1002510 : ref<T1000000>
    check(arg) V1002510 : ref<T1000000>
    V1002511 = call stanza V1000100(V1002510)
    check(return) V1002511 : ref<T1000000>
    check(arg) V1002509 : ref<T1000000>
    check(arg) V1002511 : ref<T1000000>
    V1002512 = call stanza V1000086(V1002509, V1002511)
    check(return) V1002512 : ref<T1000027>
    check(arg) V1000108 : ref<T1000027>
    V1002513 = call stanza V1000034(V1000108)
    check(return) V1002513 : ref<T1000000>
    check(arg) V1000108 : ref<T1000027>
    V1002514 = call stanza V1000033(V1000108)
    check(return) V1002514 : ref<T1000000>
    check(arg) V1002514 : ref<T1000000>
    V1002515 = call stanza V1000100(V1002514)
    check(return) V1002515 : ref<T1000000>
    check(arg) V1002513 : ref<T1000000>
    check(arg) V1002515 : ref<T1000000>
    V1002516 = call stanza V1000086(V1002513, V1002515)
    check(return) V1002516 : ref<T1000027>
    check(arg) V1002512 : ref<T1000000>
    check(arg) V1002516 : ref<T1000000>
    V1002517 = call stanza V1000080(V1002512, V1002516)
    check(return) V1002517 : ref<T1000011>
    check(return) V1002517 : ref<T1000000>
    return V1002517
    label L1002487
    check(def) V1000098 : ref<T1000035>
    V1000109 = V1000098
    check(arg) V1000109 : ref<T1000035>
    V1002518 = call stanza V1000042(V1000109)
    check(return) V1002518 : ref<T1000000>
    check(arg) V1000109 : ref<T1000035>
    V1002519 = call stanza V1000041(V1000109)
    check(return) V1002519 : ref<T1000000>
    check(arg) V1002519 : ref<T1000000>
    V1002520 = call stanza V1000100(V1002519)
    check(return) V1002520 : ref<T1000000>
    check(arg) V1002518 : ref<T1000000>
    check(arg) V1002520 : ref<T1000000>
    V1002521 = call stanza V1000086(V1002518, V1002520)
    check(return) V1002521 : ref<T1000027>
    check(arg) V1000109 : ref<T1000035>
    V1002522 = call stanza V1000041(V1000109)
    check(return) V1002522 : ref<T1000000>
    check(arg) V1000109 : ref<T1000035>
    V1002523 = call stanza V1000042(V1000109)
    check(return) V1002523 : ref<T1000000>
    check(arg) V1002523 : ref<T1000000>
    V1002524 = call stanza V1000100(V1002523)
    check(return) V1002524 : ref<T1000000>
    check(arg) V1002522 : ref<T1000000>
    check(arg) V1002524 : ref<T1000000>
    V1002525 = call stanza V1000086(V1002522, V1002524)
    check(return) V1002525 : ref<T1000027>
    check(arg) V1002521 : ref<T1000000>
    check(arg) V1002525 : ref<T1000000>
    V1002526 = call stanza V1000083(V1002521, V1002525)
    check(return) V1002526 : ref<T1000019>
    check(def) V1002526 : ref<T1000019>
    V1000110 = V1002526
    check(arg) V1000109 : ref<T1000035>
    V1002527 = call stanza V1000042(V1000109)
    check(return) V1002527 : ref<T1000000>
    check(arg) V{2} : ref<T1000227>
    V1002528 = call stanza V1000002(V{2})
    check(return) V1002528 : ref<T1000001>
    check(arg) V1002527 : ref<T1000000>
    check(arg) V1002528 : ref<T1000000>
    V1002529 = call stanza V1000092(V1002527, V1002528)
    check(return) V1002529 : ref<T1000043>
    check(def) V1002529 : ref<T1000043>
    V1000111 = V1002529
    check(arg) V1000110 : ref<T1000000>
    check(arg) V1000111 : ref<T1000000>
    V1002530 = call stanza V1000089(V1000110, V1000111)
    check(return) V1002530 : ref<T1000035>
    check(return) V1002530 : ref<T1000000>
    return V1002530
    label L1002488
    check(def) V1000098 : ref<T1000043>
    V1000112 = V1000098
    check(arg) V1000112 : ref<T1000043>
    V1002531 = call stanza V1000050(V1000112)
    check(return) V1002531 : ref<T1000000>
    check(arg) V1000112 : ref<T1000043>
    V1002532 = call stanza V1000049(V1000112)
    check(return) V1002532 : ref<T1000000>
    check(arg) V1002532 : ref<T1000000>
    V1002533 = call stanza V1000100(V1002532)
    check(return) V1002533 : ref<T1000000>
    check(arg) V1002531 : ref<T1000000>
    check(arg) V1002533 : ref<T1000000>
    V1002534 = call stanza V1000086(V1002531, V1002533)
    check(return) V1002534 : ref<T1000027>
    check(arg) V1000112 : ref<T1000043>
    V1002535 = call stanza V1000049(V1000112)
    check(return) V1002535 : ref<T1000000>
    check(arg) V1002534 : ref<T1000000>
    check(arg) V1002535 : ref<T1000000>
    V1002536 = call stanza V1000089(V1002534, V1002535)
    check(return) V1002536 : ref<T1000035>
    check(arg) V1000112 : ref<T1000043>
    V1002537 = call stanza V1000049(V1000112)
    check(return) V1002537 : ref<T1000000>
    check(arg) V1002537 : ref<T1000000>
    V1002538 = call stanza V1000095(V1002537)
    check(return) V1002538 : ref<T1000051>
    check(arg) V1000112 : ref<T1000043>
    V1002539 = call stanza V1000050(V1000112)
    check(return) V1002539 : ref<T1000000>
    check(arg) V1002539 : ref<T1000000>
    V1002540 = call stanza V1000100(V1002539)
    check(return) V1002540 : ref<T1000000>
    check(arg) V1002538 : ref<T1000000>
    check(arg) V1002540 : ref<T1000000>
    V1002541 = call stanza V1000086(V1002538, V1002540)
    check(return) V1002541 : ref<T1000027>
    check(arg) V1002536 : ref<T1000000>
    check(arg) V1002541 : ref<T1000000>
    V1002542 = call stanza V1000080(V1002536, V1002541)
    check(return) V1002542 : ref<T1000011>
    check(arg) V1000112 : ref<T1000000>
    check(arg) V1002542 : ref<T1000000>
    V1002543 = call stanza V1000086(V1000112, V1002542)
    check(return) V1002543 : ref<T1000027>
    check(return) V1002543 : ref<T1000000>
    return V1002543
    label L1002489
    check(def) V1000098 : ref<T1000051>
    V1000113 = V1000098
    check(arg) V1000113 : ref<T1000051>
    V1002544 = call stanza V1000055(V1000113)
    check(return) V1002544 : ref<T1000000>
    check(arg) V1002544 : ref<T1000000>
    V1002545 = call stanza V1000100(V1002544)
    check(return) V1002545 : ref<T1000000>
    check(arg) V1000113 : ref<T1000051>
    V1002546 = call stanza V1000055(V1000113)
    check(return) V1002546 : ref<T1000000>
    check(arg) V1002545 : ref<T1000000>
    check(arg) V1002546 : ref<T1000000>
    V1002547 = call stanza V1000089(V1002545, V1002546)
    check(return) V1002547 : ref<T1000035>
    check(return) V1002547 : ref<T1000000>
    return V1002547
  defn V1000114 fn<> (V1000115:ref<T1000177>, V1000116:ref<T1000000>) -> ref<T1000000> :
    defval V1000117:ref<T1000011>
    defval V1002556:ref<T1000000>
    defval V1002557:ref<T1000000>
    defval V1002558:ref<T1000000>
    defval V1002559:ref<T1000000>
    defval V1002560:ref<T1000011>
    defval V1000118:ref<T1000019>
    defval V1002561:ref<T1000000>
    defval V1002562:ref<T1000000>
    defval V1002563:ref<T1000000>
    defval V1002564:ref<T1000000>
    defval V1002565:ref<T1000019>
    defval V1000119:ref<T1000027>
    defval V1002566:ref<T1000000>
    defval V1002567:ref<T1000000>
    defval V1002568:ref<T1000000>
    defval V1002569:ref<T1000000>
    defval V1002570:ref<T1000027>
    defval V1000120:ref<T1000035>
    defval V1002571:ref<T1000000>
    defval V1002572:ref<T1000000>
    defval V1002573:ref<T1000000>
    defval V1002574:ref<T1000000>
    defval V1002575:ref<T1000035>
    defval V1000121:ref<T1000043>
    defval V1002576:ref<T1000000>
    defval V1002577:ref<T1000000>
    defval V1002578:ref<T1000000>
    defval V1002579:ref<T1000000>
    defval V1002580:ref<T1000043>
    defval V1000122:ref<T1000051>
    defval V1002581:ref<T1000000>
    defval V1002582:ref<T1000000>
    defval V1002583:ref<T1000051>
    defval V1000123:ref<T1000000>
    match(V1000116) :
      (ref<T1000011>) : goto L1002548
      (ref<T1000019>) : goto L1002549
      (ref<T1000027>) : goto L1002550
      (ref<T1000035>) : goto L1002551
      (ref<T1000043>) : goto L1002552
      (ref<T1000051>) : goto L1002553
      (ref<T1000000>) : goto L1002554
    label L1002548
    check(def) V1000116 : ref<T1000011>
    V1000117 = V1000116
    check(arg) V1000117 : ref<T1000011>
    V1002556 = call stanza V1000017(V1000117)
    check(return) V1002556 : ref<T1000000>
    check(arg) V1002556 : ref<T1000000>
    check(func) V1000115 : ref<T1000177>
    V1002557 = call stanza V1000115(V1002556)
    check(return) V1002557 : ref<T1000000>
    check(arg) V1000117 : ref<T1000011>
    V1002558 = call stanza V1000018(V1000117)
    check(return) V1002558 : ref<T1000000>
    check(arg) V1002558 : ref<T1000000>
    check(func) V1000115 : ref<T1000177>
    V1002559 = call stanza V1000115(V1002558)
    check(return) V1002559 : ref<T1000000>
    check(arg) V1002557 : ref<T1000000>
    check(arg) V1002559 : ref<T1000000>
    V1002560 = call stanza V1000012(V1002557, V1002559)
    check(return) V1002560 : ref<T1000011>
    check(return) V1002560 : ref<T1000000>
    return V1002560
    label L1002549
    check(def) V1000116 : ref<T1000019>
    V1000118 = V1000116
    check(arg) V1000118 : ref<T1000019>
    V1002561 = call stanza V1000025(V1000118)
    check(return) V1002561 : ref<T1000000>
    check(arg) V1002561 : ref<T1000000>
    check(func) V1000115 : ref<T1000177>
    V1002562 = call stanza V1000115(V1002561)
    check(return) V1002562 : ref<T1000000>
    check(arg) V1000118 : ref<T1000019>
    V1002563 = call stanza V1000026(V1000118)
    check(return) V1002563 : ref<T1000000>
    check(arg) V1002563 : ref<T1000000>
    check(func) V1000115 : ref<T1000177>
    V1002564 = call stanza V1000115(V1002563)
    check(return) V1002564 : ref<T1000000>
    check(arg) V1002562 : ref<T1000000>
    check(arg) V1002564 : ref<T1000000>
    V1002565 = call stanza V1000020(V1002562, V1002564)
    check(return) V1002565 : ref<T1000019>
    check(return) V1002565 : ref<T1000000>
    return V1002565
    label L1002550
    check(def) V1000116 : ref<T1000027>
    V1000119 = V1000116
    check(arg) V1000119 : ref<T1000027>
    V1002566 = call stanza V1000033(V1000119)
    check(return) V1002566 : ref<T1000000>
    check(arg) V1002566 : ref<T1000000>
    check(func) V1000115 : ref<T1000177>
    V1002567 = call stanza V1000115(V1002566)
    check(return) V1002567 : ref<T1000000>
    check(arg) V1000119 : ref<T1000027>
    V1002568 = call stanza V1000034(V1000119)
    check(return) V1002568 : ref<T1000000>
    check(arg) V1002568 : ref<T1000000>
    check(func) V1000115 : ref<T1000177>
    V1002569 = call stanza V1000115(V1002568)
    check(return) V1002569 : ref<T1000000>
    check(arg) V1002567 : ref<T1000000>
    check(arg) V1002569 : ref<T1000000>
    V1002570 = call stanza V1000028(V1002567, V1002569)
    check(return) V1002570 : ref<T1000027>
    check(return) V1002570 : ref<T1000000>
    return V1002570
    label L1002551
    check(def) V1000116 : ref<T1000035>
    V1000120 = V1000116
    check(arg) V1000120 : ref<T1000035>
    V1002571 = call stanza V1000041(V1000120)
    check(return) V1002571 : ref<T1000000>
    check(arg) V1002571 : ref<T1000000>
    check(func) V1000115 : ref<T1000177>
    V1002572 = call stanza V1000115(V1002571)
    check(return) V1002572 : ref<T1000000>
    check(arg) V1000120 : ref<T1000035>
    V1002573 = call stanza V1000042(V1000120)
    check(return) V1002573 : ref<T1000000>
    check(arg) V1002573 : ref<T1000000>
    check(func) V1000115 : ref<T1000177>
    V1002574 = call stanza V1000115(V1002573)
    check(return) V1002574 : ref<T1000000>
    check(arg) V1002572 : ref<T1000000>
    check(arg) V1002574 : ref<T1000000>
    V1002575 = call stanza V1000036(V1002572, V1002574)
    check(return) V1002575 : ref<T1000035>
    check(return) V1002575 : ref<T1000000>
    return V1002575
    label L1002552
    check(def) V1000116 : ref<T1000043>
    V1000121 = V1000116
    check(arg) V1000121 : ref<T1000043>
    V1002576 = call stanza V1000049(V1000121)
    check(return) V1002576 : ref<T1000000>
    check(arg) V1002576 : ref<T1000000>
    check(func) V1000115 : ref<T1000177>
    V1002577 = call stanza V1000115(V1002576)
    check(return) V1002577 : ref<T1000000>
    check(arg) V1000121 : ref<T1000043>
    V1002578 = call stanza V1000050(V1000121)
    check(return) V1002578 : ref<T1000000>
    check(arg) V1002578 : ref<T1000000>
    check(func) V1000115 : ref<T1000177>
    V1002579 = call stanza V1000115(V1002578)
    check(return) V1002579 : ref<T1000000>
    check(arg) V1002577 : ref<T1000000>
    check(arg) V1002579 : ref<T1000000>
    V1002580 = call stanza V1000044(V1002577, V1002579)
    check(return) V1002580 : ref<T1000043>
    check(return) V1002580 : ref<T1000000>
    return V1002580
    label L1002553
    check(def) V1000116 : ref<T1000051>
    V1000122 = V1000116
    check(arg) V1000122 : ref<T1000051>
    V1002581 = call stanza V1000055(V1000122)
    check(return) V1002581 : ref<T1000000>
    check(arg) V1002581 : ref<T1000000>
    check(func) V1000115 : ref<T1000177>
    V1002582 = call stanza V1000115(V1002581)
    check(return) V1002582 : ref<T1000000>
    check(arg) V1002582 : ref<T1000000>
    V1002583 = call stanza V1000052(V1002582)
    check(return) V1002583 : ref<T1000051>
    check(return) V1002583 : ref<T1000000>
    return V1002583
    label L1002554
    check(def) V1000116 : ref<T1000000>
    V1000123 = V1000116
    check(return) V1000123 : ref<T1000000>
    return V1000123
  defn V1000124 fn<> (V1000125:ref<T1000000>) -> or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>) :
    defval V1002598:ref<T1000000>
    defval V1000135:ref<T1000011>
    defval V1002602:ref<T1000000>
    defval V1002603:or(ref<T1000235>, ref<T1000236>)
    defval V1000136:ref<T1000235>
    defval V1002605:ref<T1000000>
    defval V1000137:ref<T1000236>
    defval V1002608:ref<T1000000>
    defval V1002609:or(ref<T1000235>, ref<T1000236>)
    defval V1000138:ref<T1000235>
    defval V1002611:ref<T1000000>
    defval V1000139:ref<T1000236>
    defval V1000140:ref<T1000019>
    defval V1002614:ref<T1000000>
    defval V1002615:or(ref<T1000235>, ref<T1000236>)
    defval V1000141:ref<T1000235>
    defval V1002617:ref<T1000001>
    defval V1002618:ref<T1000000>
    defval V1002619:ref<T1000027>
    defval V1000142:ref<T1000236>
    defval V1002622:ref<T1000000>
    defval V1002623:or(ref<T1000235>, ref<T1000236>)
    defval V1000143:ref<T1000235>
    defval V1002625:ref<T1000000>
    defval V1000144:ref<T1000236>
    defval V1000145:ref<T1000027>
    defval V1002628:ref<T1000000>
    defval V1002629:or(ref<T1000235>, ref<T1000236>)
    defval V1000146:ref<T1000235>
    defval V1002631:ref<T1000000>
    defval V1000147:ref<T1000236>
    defval V1002634:ref<T1000000>
    defval V1002635:or(ref<T1000235>, ref<T1000236>)
    defval V1000148:ref<T1000235>
    defval V1002637:ref<T1000000>
    defval V1000149:ref<T1000236>
    defval V1002640:top
    defval V1002643:ref<T1000000>
    defval V1002644:or(ref<T1000235>, ref<T1000236>)
    defval V1000150:ref<T1000235>
    defval V1000151:ref<T1000236>
    defval V1002646:ref<T1000000>
    defval V1002647:or(ref<T1000235>, ref<T1000236>)
    defval V1000152:ref<T1000235>
    defval V1002649:ref<T1000001>
    defval V1000153:ref<T1000236>
    defval V1000154:ref<T1000035>
    defval V1002652:ref<T1000000>
    defval V1002653:or(ref<T1000235>, ref<T1000236>)
    defval V1000155:ref<T1000235>
    defval V1002655:ref<T1000001>
    defval V1000156:ref<T1000236>
    defval V1002658:ref<T1000000>
    defval V1002659:or(ref<T1000235>, ref<T1000236>)
    defval V1000157:ref<T1000235>
    defval V1002661:ref<T1000000>
    defval V1000158:ref<T1000236>
    defval V1000159:ref<T1000043>
    defval V1002664:ref<T1000000>
    defval V1002665:or(ref<T1000235>, ref<T1000236>)
    defval V1000160:ref<T1000235>
    defval V1002667:ref<T1000001>
    defval V1000161:ref<T1000236>
    defval V1002670:ref<T1000000>
    defval V1002671:or(ref<T1000235>, ref<T1000236>)
    defval V1000162:ref<T1000235>
    defval V1002673:ref<T1000001>
    defval V1000163:ref<T1000236>
    defval V1000164:ref<T1000051>
    defval V1002676:ref<T1000000>
    defval V1002677:or(ref<T1000235>, ref<T1000236>)
    defval V1000165:ref<T1000235>
    defval V1002679:ref<T1000001>
    defval V1000166:ref<T1000236>
    defval V1000167:ref<T1000000>
    defn V1000126 fn<> (V1000127:ref<T1000000>, V1000128:ref<T1000227>) -> or(ref<T1000235>, ref<T1000236>) :
      defval V1000129:ref<T1000001>
      defval V1002587:ref<T1000227>
      defval V1002588:or(ref<T1000235>, ref<T1000236>)
      defval V1000130:ref<T1000000>
      match(V1000127) :
        (ref<T1000001>) : goto L1002584
        (ref<T1000000>) : goto L1002585
      label L1002584
      check(def) V1000127 : ref<T1000001>
      V1000129 = V1000127
      check(arg) V1000129 : ref<T1000001>
      V1002587 = call stanza V1000005(V1000129)
      check(return) V1002587 : ref<T1000227>
      check(arg) V1002587 : ref<T1000454>
      check(arg) V1000128 : ref<T1000454>
      V1002588 = call stanza V1000455(V1002587, V1000128)
      check(return) V1002588 : or(ref<T1000236>, ref<T1000235>)
      check(return) V1002588 : or(ref<T1000235>, ref<T1000236>)
      return V1002588
      label L1002585
      check(def) V1000127 : ref<T1000000>
      V1000130 = V1000127
      check(return) V{false} : or(ref<T1000235>, ref<T1000236>)
      return V{false}
    defn V1000131 fn<> (V1000132:ref<T1000000>) -> or(ref<T1000235>, ref<T1000236>) :
      defval V1002589:or(ref<T1000235>, ref<T1000236>)
      check(arg) V1000132 : ref<T1000000>
      check(arg) V{1} : ref<T1000227>
      V1002589 = call stanza V1000126(V1000132, V{1})
      check(return) V1002589 : or(ref<T1000235>, ref<T1000236>)
      check(return) V1002589 : or(ref<T1000235>, ref<T1000236>)
      return V1002589
    defn V1000133 fn<> (V1000134:ref<T1000000>) -> or(ref<T1000235>, ref<T1000236>) :
      defval V1002590:or(ref<T1000235>, ref<T1000236>)
      check(arg) V1000134 : ref<T1000000>
      check(arg) V{0} : ref<T1000227>
      V1002590 = call stanza V1000126(V1000134, V{0})
      check(return) V1002590 : or(ref<T1000235>, ref<T1000236>)
      check(return) V1002590 : or(ref<T1000235>, ref<T1000236>)
      return V1002590
    defn V0 fn*<> (V1:top) -> top :
      check(arg) V1 : ref<T1000000>
      tcall stanza V1000124(V1)
    init-closures (V0)
    init-closures (V1000126, V1000131, V1000133)
    check(arg) V0 : ref<T1000177>
    check(arg) V1000125 : ref<T1000000>
    V1002598 = call stanza V1000114(V0, V1000125)
    check(return) V1002598 : ref<T1000000>
    match(V1002598) :
      (ref<T1000011>) : goto L1002591
      (ref<T1000019>) : goto L1002592
      (ref<T1000027>) : goto L1002593
      (ref<T1000035>) : goto L1002594
      (ref<T1000043>) : goto L1002595
      (ref<T1000051>) : goto L1002596
      (ref<T1000000>) : goto L1002597
    label L1002591
    check(def) V1002598 : ref<T1000011>
    V1000135 = V1002598
    check(arg) V1000135 : ref<T1000011>
    V1002602 = call stanza V1000017(V1000135)
    check(return) V1002602 : ref<T1000000>
    check(arg) V1002602 : ref<T1000000>
    V1002603 = call stanza V1000133(V1002602)
    check(return) V1002603 : or(ref<T1000235>, ref<T1000236>)
    check(cast) V1002603 : or(ref<T1000235>, ref<T1000236>)
    match(V1002603) :
      (ref<T1000235>) : goto L1002600
      (ref<T1000236>) : goto L1002601
    label L1002600
    check(def) V1002603 : ref<T1000235>
    V1000136 = V1002603
    check(arg) V1000135 : ref<T1000011>
    V1002605 = call stanza V1000018(V1000135)
    check(return) V1002605 : ref<T1000000>
    check(return) V1002605 : or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>)
    return V1002605
    label L1002601
    check(def) V1002603 : ref<T1000236>
    V1000137 = V1002603
    check(arg) V1000135 : ref<T1000011>
    V1002608 = call stanza V1000018(V1000135)
    check(return) V1002608 : ref<T1000000>
    check(arg) V1002608 : ref<T1000000>
    V1002609 = call stanza V1000133(V1002608)
    check(return) V1002609 : or(ref<T1000235>, ref<T1000236>)
    check(cast) V1002609 : or(ref<T1000235>, ref<T1000236>)
    match(V1002609) :
      (ref<T1000235>) : goto L1002606
      (ref<T1000236>) : goto L1002607
    label L1002606
    check(def) V1002609 : ref<T1000235>
    V1000138 = V1002609
    check(arg) V1000135 : ref<T1000011>
    V1002611 = call stanza V1000017(V1000135)
    check(return) V1002611 : ref<T1000000>
    check(return) V1002611 : or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>)
    return V1002611
    label L1002607
    check(def) V1002609 : ref<T1000236>
    V1000139 = V1002609
    check(return) V1000135 : or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>)
    return V1000135
    label L1002592
    check(def) V1002598 : ref<T1000019>
    V1000140 = V1002598
    check(arg) V1000140 : ref<T1000019>
    V1002614 = call stanza V1000025(V1000140)
    check(return) V1002614 : ref<T1000000>
    check(arg) V1002614 : ref<T1000000>
    V1002615 = call stanza V1000133(V1002614)
    check(return) V1002615 : or(ref<T1000235>, ref<T1000236>)
    check(cast) V1002615 : or(ref<T1000235>, ref<T1000236>)
    match(V1002615) :
      (ref<T1000235>) : goto L1002612
      (ref<T1000236>) : goto L1002613
    label L1002612
    check(def) V1002615 : ref<T1000235>
    V1000141 = V1002615
    check(arg) V{-1} : ref<T1000227>
    V1002617 = call stanza V1000002(V{-1})
    check(return) V1002617 : ref<T1000001>
    check(arg) V1000140 : ref<T1000019>
    V1002618 = call stanza V1000026(V1000140)
    check(return) V1002618 : ref<T1000000>
    check(arg) V1002617 : ref<T1000000>
    check(arg) V1002618 : ref<T1000000>
    V1002619 = call stanza V1000086(V1002617, V1002618)
    check(return) V1002619 : ref<T1000027>
    check(return) V1002619 : or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>)
    return V1002619
    label L1002613
    check(def) V1002615 : ref<T1000236>
    V1000142 = V1002615
    check(arg) V1000140 : ref<T1000019>
    V1002622 = call stanza V1000026(V1000140)
    check(return) V1002622 : ref<T1000000>
    check(arg) V1002622 : ref<T1000000>
    V1002623 = call stanza V1000133(V1002622)
    check(return) V1002623 : or(ref<T1000235>, ref<T1000236>)
    check(cast) V1002623 : or(ref<T1000235>, ref<T1000236>)
    match(V1002623) :
      (ref<T1000235>) : goto L1002620
      (ref<T1000236>) : goto L1002621
    label L1002620
    check(def) V1002623 : ref<T1000235>
    V1000143 = V1002623
    check(arg) V1000140 : ref<T1000019>
    V1002625 = call stanza V1000025(V1000140)
    check(return) V1002625 : ref<T1000000>
    check(return) V1002625 : or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>)
    return V1002625
    label L1002621
    check(def) V1002623 : ref<T1000236>
    V1000144 = V1002623
    check(return) V1000140 : or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>)
    return V1000140
    label L1002593
    check(def) V1002598 : ref<T1000027>
    V1000145 = V1002598
    check(arg) V1000145 : ref<T1000027>
    V1002628 = call stanza V1000033(V1000145)
    check(return) V1002628 : ref<T1000000>
    check(arg) V1002628 : ref<T1000000>
    V1002629 = call stanza V1000131(V1002628)
    check(return) V1002629 : or(ref<T1000235>, ref<T1000236>)
    check(cast) V1002629 : or(ref<T1000235>, ref<T1000236>)
    match(V1002629) :
      (ref<T1000235>) : goto L1002626
      (ref<T1000236>) : goto L1002627
    label L1002626
    check(def) V1002629 : ref<T1000235>
    V1000146 = V1002629
    check(arg) V1000145 : ref<T1000027>
    V1002631 = call stanza V1000034(V1000145)
    check(return) V1002631 : ref<T1000000>
    check(return) V1002631 : or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>)
    return V1002631
    label L1002627
    check(def) V1002629 : ref<T1000236>
    V1000147 = V1002629
    check(arg) V1000145 : ref<T1000027>
    V1002634 = call stanza V1000034(V1000145)
    check(return) V1002634 : ref<T1000000>
    check(arg) V1002634 : ref<T1000000>
    V1002635 = call stanza V1000131(V1002634)
    check(return) V1002635 : or(ref<T1000235>, ref<T1000236>)
    check(cast) V1002635 : or(ref<T1000235>, ref<T1000236>)
    match(V1002635) :
      (ref<T1000235>) : goto L1002632
      (ref<T1000236>) : goto L1002633
    label L1002632
    check(def) V1002635 : ref<T1000235>
    V1000148 = V1002635
    check(arg) V1000145 : ref<T1000027>
    V1002637 = call stanza V1000033(V1000145)
    check(return) V1002637 : ref<T1000000>
    check(return) V1002637 : or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>)
    return V1002637
    label L1002633
    check(def) V1002635 : ref<T1000236>
    V1000149 = V1002635
    check(arg) V1000145 : ref<T1000027>
    V1002643 = call stanza V1000033(V1000145)
    check(return) V1002643 : ref<T1000000>
    check(arg) V1002643 : ref<T1000000>
    V1002644 = call stanza V1000133(V1002643)
    check(return) V1002644 : or(ref<T1000235>, ref<T1000236>)
    check(cast) V1002644 : or(ref<T1000235>, ref<T1000236>)
    match(V1002644) :
      (ref<T1000235>) : goto L1002641
      (ref<T1000236>) : goto L1002642
    label L1002641
    check(def) V1002644 : ref<T1000235>
    V1000150 = V1002644
    check(def) V{true} : top
    V1002640 = V{true}
    goto L1002645
    label L1002642
    check(def) V1002644 : ref<T1000236>
    V1000151 = V1002644
    check(arg) V1000145 : ref<T1000027>
    V1002646 = call stanza V1000034(V1000145)
    check(return) V1002646 : ref<T1000000>
    check(arg) V1002646 : ref<T1000000>
    V1002647 = call stanza V1000133(V1002646)
    check(return) V1002647 : or(ref<T1000235>, ref<T1000236>)
    check(cast) V1002647 : or(ref<T1000235>, ref<T1000236>)
    check(def) V1002647 : top
    V1002640 = V1002647
    goto L1002645
    label L1002645
    check(cast) V1002640 : or(ref<T1000235>, ref<T1000236>)
    match(V1002640) :
      (ref<T1000235>) : goto L1002638
      (ref<T1000236>) : goto L1002639
    label L1002638
    check(def) V1002640 : ref<T1000235>
    V1000152 = V1002640
    check(arg) V{0} : ref<T1000227>
    V1002649 = call stanza V1000002(V{0})
    check(return) V1002649 : ref<T1000001>
    check(return) V1002649 : or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>)
    return V1002649
    label L1002639
    check(def) V1002640 : ref<T1000236>
    V1000153 = V1002640
    check(return) V1000145 : or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>)
    return V1000145
    label L1002594
    check(def) V1002598 : ref<T1000035>
    V1000154 = V1002598
    check(arg) V1000154 : ref<T1000035>
    V1002652 = call stanza V1000041(V1000154)
    check(return) V1002652 : ref<T1000000>
    check(arg) V1002652 : ref<T1000000>
    V1002653 = call stanza V1000133(V1002652)
    check(return) V1002653 : or(ref<T1000235>, ref<T1000236>)
    check(cast) V1002653 : or(ref<T1000235>, ref<T1000236>)
    match(V1002653) :
      (ref<T1000235>) : goto L1002650
      (ref<T1000236>) : goto L1002651
    label L1002650
    check(def) V1002653 : ref<T1000235>
    V1000155 = V1002653
    check(arg) V{0} : ref<T1000227>
    V1002655 = call stanza V1000002(V{0})
    check(return) V1002655 : ref<T1000001>
    check(return) V1002655 : or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>)
    return V1002655
    label L1002651
    check(def) V1002653 : ref<T1000236>
    V1000156 = V1002653
    check(arg) V1000154 : ref<T1000035>
    V1002658 = call stanza V1000042(V1000154)
    check(return) V1002658 : ref<T1000000>
    check(arg) V1002658 : ref<T1000000>
    V1002659 = call stanza V1000131(V1002658)
    check(return) V1002659 : or(ref<T1000235>, ref<T1000236>)
    check(cast) V1002659 : or(ref<T1000235>, ref<T1000236>)
    match(V1002659) :
      (ref<T1000235>) : goto L1002656
      (ref<T1000236>) : goto L1002657
    label L1002656
    check(def) V1002659 : ref<T1000235>
    V1000157 = V1002659
    check(arg) V1000154 : ref<T1000035>
    V1002661 = call stanza V1000041(V1000154)
    check(return) V1002661 : ref<T1000000>
    check(return) V1002661 : or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>)
    return V1002661
    label L1002657
    check(def) V1002659 : ref<T1000236>
    V1000158 = V1002659
    check(return) V1000154 : or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>)
    return V1000154
    label L1002595
    check(def) V1002598 : ref<T1000043>
    V1000159 = V1002598
    check(arg) V1000159 : ref<T1000043>
    V1002664 = call stanza V1000049(V1000159)
    check(return) V1002664 : ref<T1000000>
    check(arg) V1002664 : ref<T1000000>
    V1002665 = call stanza V1000131(V1002664)
    check(return) V1002665 : or(ref<T1000235>, ref<T1000236>)
    check(cast) V1002665 : or(ref<T1000235>, ref<T1000236>)
    match(V1002665) :
      (ref<T1000235>) : goto L1002662
      (ref<T1000236>) : goto L1002663
    label L1002662
    check(def) V1002665 : ref<T1000235>
    V1000160 = V1002665
    check(arg) V{1} : ref<T1000227>
    V1002667 = call stanza V1000002(V{1})
    check(return) V1002667 : ref<T1000001>
    check(return) V1002667 : or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>)
    return V1002667
    label L1002663
    check(def) V1002665 : ref<T1000236>
    V1000161 = V1002665
    check(arg) V1000159 : ref<T1000043>
    V1002670 = call stanza V1000050(V1000159)
    check(return) V1002670 : ref<T1000000>
    check(arg) V1002670 : ref<T1000000>
    V1002671 = call stanza V1000133(V1002670)
    check(return) V1002671 : or(ref<T1000235>, ref<T1000236>)
    check(cast) V1002671 : or(ref<T1000235>, ref<T1000236>)
    match(V1002671) :
      (ref<T1000235>) : goto L1002668
      (ref<T1000236>) : goto L1002669
    label L1002668
    check(def) V1002671 : ref<T1000235>
    V1000162 = V1002671
    check(arg) V{1} : ref<T1000227>
    V1002673 = call stanza V1000002(V{1})
    check(return) V1002673 : ref<T1000001>
    check(return) V1002673 : or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>)
    return V1002673
    label L1002669
    check(def) V1002671 : ref<T1000236>
    V1000163 = V1002671
    check(return) V1000159 : or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>)
    return V1000159
    label L1002596
    check(def) V1002598 : ref<T1000051>
    V1000164 = V1002598
    check(arg) V1000164 : ref<T1000051>
    V1002676 = call stanza V1000055(V1000164)
    check(return) V1002676 : ref<T1000000>
    check(arg) V1002676 : ref<T1000000>
    V1002677 = call stanza V1000131(V1002676)
    check(return) V1002677 : or(ref<T1000235>, ref<T1000236>)
    check(cast) V1002677 : or(ref<T1000235>, ref<T1000236>)
    match(V1002677) :
      (ref<T1000235>) : goto L1002674
      (ref<T1000236>) : goto L1002675
    label L1002674
    check(def) V1002677 : ref<T1000235>
    V1000165 = V1002677
    check(arg) V{0} : ref<T1000227>
    V1002679 = call stanza V1000002(V{0})
    check(return) V1002679 : ref<T1000001>
    check(return) V1002679 : or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>)
    return V1002679
    label L1002675
    check(def) V1002677 : ref<T1000236>
    V1000166 = V1002677
    check(return) V1000164 : or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>)
    return V1000164
    label L1002597
    check(def) V1002598 : ref<T1000000>
    V1000167 = V1002598
    check(return) V1000167 : or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>)
    return V1000167
  defn V1000168 fn<> () -> ref<T1000236> :
    defval V1000169:ref<T1000006>
    defval V1002680:ref<T1000006>
    defval V1002681:ref<T1000237>
    defval V1002682:ref<T1000001>
    defval V1002683:ref<T1000001>
    defval V1002684:ref<T1000001>
    defval V1002685:ref<T1000001>
    defval V1000170:ref<T1000001>
    defval V1000171:ref<T1000001>
    defval V1000172:ref<T1000001>
    defval V1000173:ref<T1000001>
    defval V1000174:ref<T1000011>
    defval V1002686:ref<T1000027>
    defval V1002687:ref<T1000043>
    defval V1002688:ref<T1000011>
    defval V1002689:ref<T1000027>
    defval V1002690:ref<T1000011>
    defval V1002691:ref<T1000011>
    defval V1002692:ref<T1000051>
    defval V1002693:ref<T1000011>
    defval V1000175:ref<T1000000>
    defval V1002694:ref<T1000000>
    defval V1000176:or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>)
    defval V1002695:or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>)
    defval V1002696:ref<T1000237>
    defval V1002697:ref<T1000882>
    defval V1002698:ref<T1000236>
    defval V1002699:ref<T1000237>
    defval V1002700:ref<T1000882>
    defval V1002701:ref<T1000236>
    defval V1002702:ref<T1000237>
    defval V1002703:ref<T1000882>
    defval V1002704:ref<T1000236>
    check(arg) V{x} : ref<T1000232>
    V1002680 = call stanza V1000007(V{x})
    check(return) V1002680 : ref<T1000006>
    check(def) V1002680 : ref<T1000006>
    V1000169 = V1002680
    check(arg) V{1} : ref<T1000227>
    V1002682 = call stanza V1000002(V{1})
    check(return) V1002682 : ref<T1000001>
    check(arg) V{2} : ref<T1000227>
    V1002683 = call stanza V1000002(V{2})
    check(return) V1002683 : ref<T1000001>
    check(arg) V{3} : ref<T1000227>
    V1002684 = call stanza V1000002(V{3})
    check(return) V1002684 : ref<T1000001>
    check(arg) V{4} : ref<T1000227>
    V1002685 = call stanza V1000002(V{4})
    check(return) V1002685 : ref<T1000001>
    V1002681 = tuple [V1002682, V1002683, V1002684, V1002685]
    check(detuple) V1002681 : ref<T1000237>
    check-length(V1002681) == 4
    V1000170 = tuple-get V1002681[0]
    V1000171 = tuple-get V1002681[1]
    V1000172 = tuple-get V1002681[2]
    V1000173 = tuple-get V1002681[3]
    check(arg) V1000171 : ref<T1000000>
    check(arg) V1000169 : ref<T1000000>
    V1002686 = call stanza V1000086(V1000171, V1000169)
    check(return) V1002686 : ref<T1000027>
    check(arg) V1002686 : ref<T1000000>
    check(arg) V1000171 : ref<T1000000>
    V1002687 = call stanza V1000092(V1002686, V1000171)
    check(return) V1002687 : ref<T1000043>
    check(arg) V1000170 : ref<T1000000>
    check(arg) V1000172 : ref<T1000000>
    V1002688 = call stanza V1000080(V1000170, V1000172)
    check(return) V1002688 : ref<T1000011>
    check(arg) V1002688 : ref<T1000000>
    check(arg) V1000169 : ref<T1000000>
    V1002689 = call stanza V1000086(V1002688, V1000169)
    check(return) V1002689 : ref<T1000027>
    check(arg) V1002687 : ref<T1000000>
    check(arg) V1002689 : ref<T1000000>
    V1002690 = call stanza V1000080(V1002687, V1002689)
    check(return) V1002690 : ref<T1000011>
    check(arg) V1000169 : ref<T1000000>
    check(arg) V1000173 : ref<T1000000>
    V1002691 = call stanza V1000080(V1000169, V1000173)
    check(return) V1002691 : ref<T1000011>
    check(arg) V1002691 : ref<T1000000>
    V1002692 = call stanza V1000095(V1002691)
    check(return) V1002692 : ref<T1000051>
    check(arg) V1002690 : ref<T1000000>
    check(arg) V1002692 : ref<T1000000>
    V1002693 = call stanza V1000080(V1002690, V1002692)
    check(return) V1002693 : ref<T1000011>
    check(def) V1002693 : ref<T1000011>
    V1000174 = V1002693
    check(arg) V1000174 : ref<T1000000>
    check(arg) V{x} : ref<T1000232>
    V1002694 = call stanza V1000097(V1000174, V{x})
    check(return) V1002694 : ref<T1000000>
    check(def) V1002694 : ref<T1000000>
    V1000175 = V1002694
    check(arg) V1000175 : ref<T1000000>
    V1002695 = call stanza V1000124(V1000175)
    check(return) V1002695 : or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>)
    check(def) V1002695 : or(or(or(or(or(or(or(ref<T1000000>, ref<T1000001>), ref<T1000011>), ref<T1000019>), ref<T1000027>), ref<T1000035>), ref<T1000043>), ref<T1000051>)
    V1000176 = V1002695
    V1002696 = tuple [V1000174]
    check(arg) V{"Original Expression: %_"} : ref<T1000231>
    check(arg) V1002696 : ref<T1001101>
    V1002697 = call stanza V1000883(V{"Original Expression: %_"}, V1002696)
    check(return) V1002697 : ref<T1000882>
    check(arg) V1002697 : top
    V1002698 = call stanza V1000601(V1002697)
    check(return) V1002698 : ref<T1000236>
    V1002699 = tuple [V1000175]
    check(arg) V{"Differentiated Expression: %_"} : ref<T1000231>
    check(arg) V1002699 : ref<T1001101>
    V1002700 = call stanza V1000883(V{"Differentiated Expression: %_"}, V1002699)
    check(return) V1002700 : ref<T1000882>
    check(arg) V1002700 : top
    V1002701 = call stanza V1000601(V1002700)
    check(return) V1002701 : ref<T1000236>
    V1002702 = tuple [V1000176]
    check(arg) V{"Simplified Expression: %_"} : ref<T1000231>
    check(arg) V1002702 : ref<T1001101>
    V1002703 = call stanza V1000883(V{"Simplified Expression: %_"}, V1002702)
    check(return) V1002703 : ref<T1000882>
    check(arg) V1002703 : top
    V1002704 = call stanza V1000601(V1002703)
    check(return) V1002704 : ref<T1000236>
    check(return) V1002704 : ref<T1000236>
    return V1002704
  init :
    defval V1002705:ref<T1000236>
    V1002705 = call stanza V1000168()
    check(return) V1002705 : ref<T1000236>