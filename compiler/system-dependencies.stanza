defpackage stz/system-dependencies :
  import core
  import collections
  import stz/external-dependencies
  import stz/params

;Compute the set of external dependencies required by the
;system. 
public defn system-dependencies (platform:Symbol) -> ProjDependencies :
  val ccfiles = Vector<String>()
  val ccflags = Vector<String>()
  
  ;C Standard
  add(ccflags, "-std=gnu99")

  ;Use static linking on windows
  if platform == `windows :
    add(ccflags, "-Wl,-Bstatic")

  ;Math library
  add(ccflags, "-lm")

  ;PThread library
  if platform == `windows or platform == `linux :
    add(ccflags, "-lpthread")

  ;Backward compatibility flag for OS-X Pre-Catalina
  if platform == `os-x :
    add(ccflags, "-mmacosx-version-min=10.13")

  ;Position independence flag
  if platform == `linux :
    add(ccflags, "-ldl")
    add(ccflags, "-fPIC")

  ;Driver Platform flag
  add(ccflags, "-D")
  switch(platform) :
    `os-x : add(ccflags, "PLATFORM_OS_X")
    `linux : add(ccflags, "PLATFORM_LINUX")
    `windows : add(ccflags, "PLATFORM_WINDOWS")

  ;Stanza include dir
  add(ccflags, to-string("-I%_" % [system-filepath(StanzaIncludeDir)]))

  ;Driver file
  add(ccfiles, system-filepath(StanzaRuntimeDriver))

  ;Return ccfiles and ccflags
  ProjDependencies(
    to-tuple(ccfiles),
    to-tuple(ccflags))