defpackage stz/fastio-runtime :
  import core
  import collections
  import stz/fastio-buffer

;Parent type of all FastIO serializers.
public deftype FastIOSerializer

;Use the given serializer to write an object to a file.
public defn write-to-file<?T,?S> (filename:String,
                                  serializer:?S&FastIOSerializer,
                                  writer:(S, T, FastIOBuffer) -> False,
                                  obj:?T) -> False :
  val stream = FileOutputStream(filename)
  try :
    val buffer = FastIOBuffer(16 * 1024, stream)
    try :
      writer(serializer, obj, buffer)
      flush(buffer)
    finally :
      free(buffer)
  finally :
    close(stream)

;Use the given serializer to read an object from a file.
public defn read-from-file<?T,?S> (filename:String,
                                   serializer:?S&FastIOSerializer,
                                   reader:(S, FastIOBuffer) -> ?T) -> T :
  val file = RandomAccessFile(filename, false)
  try :
    val buffer = read-into-buffer(file)
    try :
      reader(serializer, buffer)
    finally :
      free(buffer)
  finally :
    close(file)

;Read the entire contents of a file into a FastIOBuffer.
lostanza defn read-into-buffer (file:ref<RandomAccessFile>) -> ref<FastIOBuffer> :
  val len = length(file).value
  val buffer = FastIOBuffer(new Int{(len + 8) as int}, fn(forbid-flush))
  val num-read = call-c clib/fread(buffer.data, 1, len, file.file)
  if num-read < len :
    val err = call-c clib/ferror(file.file)
    if err : throw(FileReadException(core/platform-error-msg()))
  buffer.end = buffer.data + len
  return buffer

defn forbid-flush (b:FastIOBuffer) :
  fatal("Read-only buffer.")

;============================================================
;========== Uninitialized Strings and ByteArrays ============
;============================================================

;Return a String of the given length but with uninitialized characters.
;The characters will be filled in later.
public lostanza defn uninitialized-string (len:ref<Int>) -> ref<String> :
  val l = len.value
  val s = String(l)
  s.chars[l] = 0Y
  return s

;Return a ByteArray of the given length with uninitialized bytes.
;The bytes will be filled in later.
public lostanza defn uninitialized-byte-array (len:ref<Int>) -> ref<ByteArray> :
  return new ByteArray{len.value}