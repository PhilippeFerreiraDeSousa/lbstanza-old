defpackage stz/overlap-table :
  import core
  import collections

;A simple table to count the number of pairwise overlaps between items.
;Contains a simple optimization for items that are equivalent, and have the
;complete set of pairwise overlaps.
public deftype OverlapTable

;Add a set of disjoint groups to the overlap table.
public defmulti add-groups (t:OverlapTable, groups:Seqable<Seqable<Int>>) -> False

;Add a pairwise overlap to the overlap table.
public defmulti add-overlap (t:OverlapTable, x:Int, y:Int) -> False

;Retrieve the number of overlaps in total between x and y.
public defmulti num-overlaps (t:OverlapTable, x:Int, y:Int) -> Int

;Create the overlap table.
public defn OverlapTable (n:Int) -> OverlapTable :

  ;Track the disjoint groups.
  val groups = Vector<Array<Int|False>>()

  ;Track the pairwise overlaps
  val pairwise-overlaps = HashTable<[Int,Int],Int>(0)

  ;Create the key for the pairwise table.
  defn pairwise-key (x:Int, y:Int) -> [Int, Int] :
    [x, y] when x < y else [y, x]

  ;Create the overlap table.
  new OverlapTable :
  
    ;Add a set of disjoint groups to the overlap table.
    defmethod add-groups (this, new-groups:Seqable<Seqable<Int>>) -> False :
      val markers = Array<Int|False>(n,false)
      for (group in new-groups, marker in 0 to false) do :
        for i in group do :
          fatal("Groups are not disjoint.") when markers[i] is Int
          markers[i] = marker
      add(groups, markers)

    ;Add a pairwise overlap to the overlap table.
    defmethod add-overlap (this, x:Int, y:Int) -> False :
      fatal("Not distinct: %_" % [x]) when x == y
      update(pairwise-overlaps, {_ + 1}, pairwise-key(x,y))
      false

    ;Retrieve the total number of overlaps.
    defmethod num-overlaps (this, x:Int, y:Int) -> Int :
    
      ;Count the number of grouped overlaps.
      val group-overlaps = sum $
        for group in groups seq :
          match(group[x], group[y]) :
            (gx:Int, gy:Int) : 1 when gx == gy else 0
            (gx, gy) : 0

      ;Add the number of pairwise overlaps.
      pairwise-overlaps[pairwise-key(x,y)] + group-overlaps