defpackage stz/sexp-errors :
  import core
  import collections

;General error type for s-expressions.
public deftype SExpError <: Exception

;Occurs when we detect an object that is not a valid
;s-expression type.
public defstruct NotAnSExp <: SExpError :
  info:FileInfo|False
  type:String
defmethod print (o:OutputStream, e:NotAnSExp) :
  print(o, "%_Object of type %_ is not a valid s-expression." % [
    info-str(info(e)), type(e)])

;Occurs when we detect that an s-expression is not valid.
public defstruct InvalidSExp <: SExpError :
  errors:Tuple<SExpError>
defmethod print (o:OutputStream, e:InvalidSExp) :
  val err-str = Indented("%n" % [errors(e)])
  print(o, "The s-expression is invalid:\n%_" % [err-str])

;Helper: Format file information
defn info-str (info:FileInfo|False) :
  "" when info is False else "%_: " % [info]