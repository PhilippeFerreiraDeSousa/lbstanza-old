defpackage stz/fastio-serializer-lang-parser :
  import core
  import collections
  import stz/fastio-serializer-lang
  import stz/core-macros
  import stz/fastio-errors

;============================================================
;==================== Syntax Definition =====================
;============================================================

defsyntax fastio-serializer-lang :
  import (id!, exp!, type!, :!) from core

  public defproduction defserializer: DefSerializer
  defrule defserializer = (defserializer ?name:#id! #:! (
                             ?entry-points:#entry-points!
                             ?exps:#texp! ...)) :
    fatal("Not yet implemented")

  defproduction entry-points!: Tuple<Symbol>
  defrule entry-points! = (entry-points #:! (?names:#id! ...)) :
    to-tuple(unwrap-all(names))
  fail-if entry-points! = () :
    FSE(closest-info(), "Expected listing of serializer entry points here.")

  ;----------------------------------------------------------
  ;------------------- Top Level Expressions ----------------
  ;----------------------------------------------------------

  defproduction texp!:TopExp

  defrule texp! = (include ?filename:#string) :
    match(closest-info()) :
      (info:FileInfo) : IncludeFile(info, unwrap-token(filename))
      (f:False) : throw(FSE(false, "Include statement is not supported if name of current file is unknown."))

  defrule texp! = (defatom ?name:#id! (?binder:#id! #:! ?type:#type!) #:! (
                     #writer! #:! (?writer-exps ...)
                     #reader! #:! (?reader-exps ...))) :
    DefAtom(closest-info(),
            unwrap-token(name),
            unwrap-token(binder),
            type,
            writer,
            reader)
  
  defrule texp! = (?e:#exp!) :
    StanzaExp(closest-info(), e)

  ;----------------------------------------------------------
  ;---------------------- Keywords --------------------------
  ;----------------------------------------------------------
  defproduction writer!
  defrule writer! = (writer)
  fail-if writer! = () : FSE(closest-info(), "Expected keyword 'writer' here.")

  defproduction reader!
  defrule reader! = (reader)
  fail-if reader! = () : FSE(closest-info(), "Expected keyword 'reader' here.")

  ;----------------------------------------------------------
  ;-------------------- Primitives --------------------------
  ;----------------------------------------------------------
  defproduction string: String
  defrule string = (?s) when unwrap-token(s) is String

  defproduction int: Int
  defrule int = (?s) when unwrap-token(s) is Int

  ;----------------------------------------------------------
  ;----------------------- Errors ---------------------------
  ;----------------------------------------------------------
  defn FSE (info:FileInfo|False, msg) :
    FastIOSyntaxError(info, msg)
