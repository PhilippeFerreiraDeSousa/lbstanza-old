defpackage stz/fastio-serializer-macros :
  import core
  import collections
  import macro-utils
  import stz/core-macros
  import stz/fastio-serializer-lang
  import stz/fastio-serializer-lang-parser
  import stz/fastio-code-transforms
  import stz/fastio-to-codegen-ir
  import stz/fastio-codegen

defsyntax fastio-serializer :
  import exp4 from core
  import defserializer from fastio-serializer-lang

  defrule exp4 = (?s:#defserializer) :
    val transformed = lift-combinators(s)
    val code-ir = to-codegen-ir(transformed)
    val form = to-sexp(code-ir)
    parse-syntax[core / #exp](List(form))