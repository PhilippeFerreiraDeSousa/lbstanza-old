defpackage stz/example-package-manager :
  import core
  import collections
  import stz/external-dependencies
  import stz/proj-env
  import stz/proj-value-types
  import stz/foreign-package-manager

;This implements an example package manager for testing purposes. 

public defn ExamplePackageManager () -> ForeignPackageManager :
  new ForeignPackageManager :
    defmethod name (this) :
      `example-manager
  
    ;Return the parameters that a user should specify in their .proj file.
    defmethod configuration-params (this) :
      ;Example: Suppose that user's are allowed to have the following
      ;in their .proj file:
      ;  foreign-package-params(conan) :
      ;    project-root: "mydir/myproject"
      ;    email: "patrick@jitx.com"
      ;Suppose that email is optional.
      [FieldType(`project-root,
                 false,
                 SINGLE-STRING,
                 PathField)
       FieldType(`email,
                 true,
                 SINGLE-STRING,
                 StandardField)]

    defmethod system-dependencies (this, params:PackageManagerParams) :
      ProjDependencies([""],
                       ["-lEXAMPLELIB"],
                       [])

    defmethod proj-variables (this, params:PackageManagerParams, platform:Symbol) -> Tuple<KeyValue<Symbol,?>> :
      val root = lookup(entries(params), `project-root)
      val email = lookup?(entries(params), `email, "no email given")
      [
        `EXAMPLE-EMAIL => email
        `EXAMPLE-BUILD-DIR => to-string("%_/build" % [root])
      ]

    defmethod satisfy-dependencies (this,
                                    packages:Tuple<String>,
                                    params:PackageManagerParams,
                                    system:System) -> True|False :
      ;Example: Suppose we satisfy dependencies by calling 'conan install' in the project directory
      val root = lookup(entries(params), `project-root)
      println("EXAMPLE: Simulate a build in root directory %~" % [root])
      println("User email: %~" % [lookup?(entries(params), `email, "No email given.")])
      for package in packages do :
        println("Retrieve foreign package: %~" % [package])

    