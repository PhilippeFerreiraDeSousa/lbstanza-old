defpackage stz/macro-plugin :
  import core
  import collections
  import stz/fastio-runtime
  import stz/plugin-interface
  import stz/sexp-serializer

println("Inside macro expansion plugin!")

;The interface for communicating with the plugin.
val PLUGIN-INTERFACE = PluginInterface(SExpIO())

;The entry-point to the macro plugin.
extern defn macroexpand (input:ptr<byte>) -> ptr<byte> :
  return receive(PLUGIN-INTERFACE, input, fn(macroexpand-sexp))

defn macroexpand-sexp (sexp) -> ? :
  "Hello world"