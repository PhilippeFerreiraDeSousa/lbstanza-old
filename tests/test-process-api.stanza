#use-added-syntax(tests)
defpackage stz/test-process-api : 
  import core

; Poll a process until it exits, failing the test if the process
; takes longer than the timeout argumnet
defn check-exits-within-timeout (timeout:Long, process:Process) : 
  val timer = MillisecondTimer("time-process")
  start(timer)
  let loop () : 
    #ASSERT(time(timer) < timeout)
    sleep-us(10L)
    loop() when state(process) is ProcessRunning

; This test verifies polling a short-running process works as expected
deftest test-short-process :
  val process = Process("sleep", ["sleep", "0.01"])
  check-exits-within-timeout(100L, process)

; This test verifies polling a longer-running process works as expected
deftest test-long-process :
  val process = Process("sleep", ["sleep", "1s"])
  check-exits-within-timeout(2000L, process)

; This test verifies that polling a process after it has exited works
; as expected.
deftest test-short-process-exit-before-poll : 
  val process = Process("sleep", ["sleep", "0.01"])
  ; Sleep for five seconds, then poll the process. 
  for n in 0 to 10 do : 
    sleep-us(500L * 1000L)
  check-exits-within-timeout(20L, process)
