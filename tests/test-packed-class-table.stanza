defpackage stz/test-packed-class-table :
  import core
  import collections
  import stz/packed-class-table

defn records () -> Tuple<ClassTableRecord> :
  val indices = to-seq(0 to false)
  [
    LeafClassRecord(next(indices), "MyClass", 1, [0])
  ]  

defn test-packer () :
  val label-counter = to-seq(1000 to false)
  new StaticPacker :
    defmethod make-label (this) :
      next(label-counter)
    defmethod emit-comment (this, str:String) :
      println("//%_" % [str])
    defmethod emit-label (this, id:Int) :
      println(".label L%_" % [id])
    defmethod emit-pointer-to-label (this, id:Int) :
      println(".pointer-to-label L%_" % [id])
    defmethod emit (this, x:Int) :
      println(".int %_" % [x])
    defmethod emit (this, s:String) :
      println(".string %~" % [s])

defn main () :
  pack(records(), test-packer())

main()