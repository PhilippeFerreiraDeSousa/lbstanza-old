#use-added-syntax(tests)
defpackage stz/test-nan :
  import core
  import collections
  import stz/test-utils

;Check that the nan? predicate works.
deftest nan-detection :
  val x = 1.0f
  val y = 0.0f / 0.0f
  #ASSERT(not nan?(x))
  #ASSERT(nan?(y))

;Check both Nan and Non-Nan cases.
;Make sure that the operators return the right results:
; <, <=, >, >=, ==, !=
deftest nan-operators :
  val one = 1.0f
  val two = 2.0f
  val nan = 0.0f / 0.0f

  ;Operator: <
  #ASSERT(one < two)
  #ASSERT(not two < one)
  #ASSERT(not one < nan)

  ;Operator: <=
  #ASSERT(one <= two)
  #ASSERT(not two <= one)
  #ASSERT(not one <= nan)

  ;Operator: >
  #ASSERT(not one > two)
  #ASSERT(two > one)
  #ASSERT(not one > nan)
  
  ;Operator: >=
  #ASSERT(not one >= two)
  #ASSERT(two >= one)
  #ASSERT(not one >= nan)

  ;Operator: ==
  #ASSERT(one == one)
  #ASSERT(not one == two)
  #ASSERT(not one == nan)
  #ASSERT(not nan == nan)

  ;Operator: !=
  #ASSERT(not one != one)
  #ASSERT(one != two)
  #ASSERT(one != nan)
  #ASSERT(nan != nan)