#use-added-syntax(tests)
defpackage stz/test-match-syntax :
  import core
  import collections

defsyntax test-match-syntax :
  public defproduction item: String
  defrule item = (item-a) : "Item Category A"
  defrule item = (item-b) : "Item Category B"

defsyntax imported-test-match-syntax :
  public import item from test-match-syntax
  
deftest test-match-syntax :
  val form = `(start-items :
                 item-a
                 item-a
                 item-b
               end-items :
                 item-b
                 item-b)
  match-syntax[imported-test-match-syntax](form) :
    (start-items : (?xs:#item ...)
     end-items : (?ys:#item ...)) :
      #ASSERT(xs == `("Item Category A" "Item Category A" "Item Category B"))
      #ASSERT(ys == `("Item Category B" "Item Category B"))
    (_ ...) :
      ;Test failure
      #ASSERT(false)

deftest test-parse-syntax :
  val form = `(item-a item-a item-b)
  val parsed = parse-syntax[imported-test-match-syntax / #item ...](form)
  println(parsed)