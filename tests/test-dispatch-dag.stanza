defpackage stz/test-dispatch-dag :
  import core
  import collections
  import stz/dispatch-dag

let :
  val a = 0
  val b = 1
  val c = 2
  val d = 3
  val ax = 4
  val bx = 5
  val cx = 6
  val dx = 7
  val A = Nums(qsort([a ax b bx c cx d dx]))
  val B = Nums(qsort([b bx d dx]))
  val C = Nums(qsort([c cx d dx]))
  val D = Nums(qsort([d dx]))
  val btable = BranchTable(
    [Branch([A A])
     Branch([A B])
     Branch([B A])
     Branch([D C])
     Branch([D D])]
    to-intset([a b c d]))
  println(compute-dispatch-dag(btable, true))

let :
  val A = 0
  val B = 1
  val a = 2
  val b = 3
  val c = 4
  val X = 5
  val x = 6
  val TX = Nums(qsort([X x A a c B b]))
  val TA = Nums(qsort([A a c B b]))
  val TB = Nums(qsort([B b]))
  val Tc = Nums(qsort([c]))
  val btable = BranchTable(
    [Branch([TX TX])
     Branch([TA TB])
     Branch([Tc TA])]
    to-intset([A B X]))
  println(compute-dispatch-dag(btable, true))