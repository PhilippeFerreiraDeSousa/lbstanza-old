;Example proj file

package stz/line-noise-prompter requires :
  ccfiles: "runtime/linenoise.c"

package stz/vm requires :
  ccfiles: "build/cvm.o"

compile file "build/cvm.o" from "compiler/cvm.c" :
  on-platform :
    os-x : "cc -std=gnu99 '{.}/compiler/cvm.c' -c -o '{.}/build/cvm.o' -O3 -D PLATFORM_OS_X"
    linux : "cc -std=gnu99 '{.}/compiler/cvm.c' -c -o '{.}/build/cvm.o' -O3 -D PLATFORM_LINUX -fPIC"
    windows : "gcc -std=gnu99 '{.}\\compiler\\cvm.c' -c -o '{.}\\build\\cvm.o' -O3 -D PLATFORM_WINDOWS"

package core/sha256 requires :
  ccfiles: "build/sha256.o"
  foreign-packages(conan) :
    "gzip/11.22"
    "simpletime/11.22"
  foreign-packages(appget) :
    on-platform:
      os-x :
        "myapp-osx/11.32"
      else :
        "myapp/11.32"

foreign-package-params(conan) :
  build-dir: "build"

compile file "build/sha256.o" from "core/sha256.c" :
  on-platform :
    os-x : "cc -std=gnu99 '{.}/core/sha256.c' -c -o '{.}/build/sha256.o' -O3"
    linux : "cc -std=gnu99 '{.}/core/sha256.c' -c -o '{.}/build/sha256.o' -O3 -fPIC"
    windows : "gcc -std=gnu99 '{.}\\core\\sha256.c' -c -o '{.}\\build\\sha256.o' -O3"

package core/threaded-reader requires :
  ccfiles: "core/threadedreader.c"

package core/dynamic-library requires :
  ccfiles: "core/dynamic-library.c"

package stz/asmjit requires :
  ccflags:
    on-platform :
      os-x :
        "-L{.}/bin"
        "-lasmjit"
        "-lc++"
      linux :
        "-L{.}/bin"
        "-lasmjit"
        "-lstdc++"
        "-lrt"
      windows :
        "-L{.}/bin"
        "-lasmjit"
        "-lstdc++"

package stz/macro-plugin requires :
  ccfiles: "compiler/macro-handshake.c"
  ccflags: "-shared"