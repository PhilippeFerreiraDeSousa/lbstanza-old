defpackage stz-test-suite/dev-proj :
  import core
  import collections
  import arg-parser
  import stz/proj
  import stz/proj-env
  import stz/proj-value-types
  import stz-test-suite/test-tools

;Uncomment these lines to force a particular action.
set-command-line-arguments $ ["dev-proj" data-file("ex1.proj") "-package-managers" "conan"]
within (package,sig) = set-stack-trace-filter() :
  package != `core

;Dummy package manager for Conan.
defn conan-manager-info () -> ForeignPackageManagerInfo :
  ForeignPackageManagerInfo(
    `conan,
    [FieldType(`build-dir
               false
               SINGLE-STRING,
               PathField)
     FieldType(`config-file
               true
               SINGLE-STRING,
               PathField)
     FieldType(`commands
               true
               MULTIPLE-STRINGS,
               CommandField)])

;Retrieve a bunch of dummy package managers for testing.
defn manager-infos (names:Tuple<String>) -> Tuple<ForeignPackageManagerInfo> :
  for name in names map :
    switch(name) :
      "conan" : conan-manager-info()
      else : fatal("No dummy package manager called %~." % [name])

;Read the proj file in the filenames and print it out.
defn read-proj-action (cmdargs:CommandArgs) :
  val filenames = args(cmdargs)
  println("Read %@" % [filenames])
  val platform = to-symbol(get?(cmdargs, "platform", "os-x"))
  val env = new ProjEnv :
    defmethod foreign-package-managers (this) :
      manager-infos(get?(cmdargs, "package-managers", []))
  val proj = read-proj-files(filenames, platform, env)
  println(proj)

;Launch!
simple-command-line-cli(false, commands, "read", false, false) where :
  val commands = [
    Command(
      "read", AtLeastOneArg, "the .proj file to read",
      [Flag(
        "platform"
        OneFlag
        OptionalFlag
        "the platform. Either os-x, linux, or windows.")
       Flag(
        "package-managers"
        AtLeastOneFlag
        OptionalFlag
        "the list of dummy package managers.")],
      "Read a .proj file and normalize it.",
      read-proj-action)]