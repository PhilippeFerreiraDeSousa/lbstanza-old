defpackage test-bitset-intrinsics :
  import core
  import collections

lostanza var BITSET: long

lostanza defn test-test-bit () -> ref<False> :
  call-c clib/printf("Start test-test-bit\n")
  val bitset-base = addr(BITSET)
  for (BITSET = 1L, BITSET != 0L, BITSET = BITSET << 1L) :
    for (var i:long = 0L, i < 64L, i = i + 1L) :
      val p:ptr<long> = (i << 3) as ptr<long>
      val mark = (BITSET >> i) & 1L
      val bit = call-prim test-bit(p, bitset-base) & 1L
      if mark != bit :
        call-c clib/printf("Mismatch at bit index: %ld\n", i)
  call-c clib/printf("Done test-test-bit\n")
  return false

test-test-bit()
