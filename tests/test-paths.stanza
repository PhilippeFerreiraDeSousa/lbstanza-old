#use-added-syntax(tests)
defpackage stz/test-paths :
  import core
  import collections
  import stz/parsed-path

defn test-parse-path (path:String, platform:Platform) :
  println("Parse path: %_" % [path])
  try :
    val parsed-path = parse-path(path, platform)
    println("Entries:")
    for e in entries(parsed-path) do :
      println("  %_" % [e])
    println("Absolute? %_" % [absolute?(parsed-path)])
    println("Formatted: %_" % [format(parsed-path, platform)])
  catch (e:PathParsingError) :
    println(e)  

deftest test-os-x-path-parsing :
  val paths = [
    "/mydir1/mydir2/mydir3/myfile.txt"
    "mydir1"
    "/mydir1/../mydir2/myfile.txt"
    "/mydir1/././mydir2"
    "../mydir2"
    "./mydir2/myfile.txt"
    "/../myfile.txt"
    "a/b///d"
    "/shared folder/escaped\\\\slash/myfile.txt"]
  do(test-parse-path{_, OS-X}, paths)

deftest test-windows-path-parsing :
  val paths = [
    "C:\\mydir1/mydir2/mydir3/myfile.txt"
    "C:\\"
    ":\\mydir1/../mydir2\\myfile.txt"
    "C:mydir1/mydir2"]
  do(test-parse-path{_, Windows}, paths)