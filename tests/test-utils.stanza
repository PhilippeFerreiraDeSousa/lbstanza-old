#use-added-syntax(tests)
defpackage stz/test-utils :
  import core
  import collections

public defn cmd (s:String) :
  val args = to-tuple(tokenize-shell-command(s))
  call-system(args[0], args)
  
public defn cmdr (s:String) -> String :
  val args = to-tuple(tokenize-shell-command(s))
  call-system-and-get-output(args[0], args)

public defn assert-cmd-returns (s:String, ret:String) :
  val result = cmdr(s)
  println(result)
  #ASSERT(trim(result) == trim(ret))

defstruct EchoStream <: OutputStream :
  buffer:StringBuffer with: (init => StringBuffer())
  
defmethod print (s:EchoStream, c:Char) :
  print(buffer(s), c)
  print(STANDARD-OUTPUT-STREAM, c)

public defn get-printout (body:() -> ?) -> String :
  val stream = EchoStream()
  with-output-stream(stream, body)
  to-string(buffer(stream))

public defn assert-printout (body:() -> ?, result:String) :
  #ASSERT(trim(get-printout(body)) == trim(result))

public defn execute-with-safe-halt (body:() -> ?) :
  execute-with-error-handler(body, println{"Execution Halted"})