defpackage parser/engine-frames :
  import core with:
    prefix(StackFrame) => Core
  import collections
  
public deftype StackFrame

;Used to represent the parse state from before starting a Branch.
;- alts: If no match is found, these are the addresses
;  of the alternate branches.
;- conseq: If a match is found, this is the address to
;  go to to proceed with the computation.
;- info/form/upform: The rest of the input.
;- num-values: The number of values on the value-stack. On no match,
;  this is required to restore the value-stack to its original state
;  before trying another branch.
public defstruct BranchFrame <: StackFrame :
  alts:List<Int> with: (updater => sub-alts)
  conseq:Int
  info:FileInfo|False
  form:List
  upform:List<List>
  num-values:Int
with:
  printer => true

;Used to represent the parse state from before a Not pattern.
public defstruct InvBranchFrame <: StackFrame :
  info:FileInfo|False
  form:List
  upform:List<List>
  num-values:Int
  end:Int
with:
  printer => true  

;Used to represent the parse state from before calling a
;nested production.
;- return: The address to jump to after the nested production returns.
;- bind?: True if the binders from the nested production should be kept.
;  Otherwise, they are discarded.
;- num-values: The number of values on the value-stack. If bind? is false,
;  then this is used to restore the value-stack.
;- from-overlay?: True if the call was from the overlay. False if the call
;  was from a within-package pattern.
public defstruct CallFrame <: StackFrame :
  return:Int
  num-values:Int
  bind?:True|False
  from-overlay?:True|False
with:
  printer => true

;Used to represent the parse state before beginning a loop
;iteration.
;- start: The address of the first instruction in loop.
;- end: The address of the first instruction after loop.
;- bind?: True if the loop produces a ListMarker/ListEndMarker pair
;  in the value-stack. False if the loop does not.
public defstruct LoopFrame <: StackFrame :
  info:FileInfo|False
  form:List
  upform:List<List>
  start:Int
  end:Int
  num-values:Int
  bind?:True|False
with:
  printer => true

;Used to represent the start of parsing patterns with a list.
;This is used for recovery. On failure, the parse attempts to
;continue from the closing paren.
public defstruct ListFrame <: StackFrame :
  upform:List<List>
  end:Int
  num-values:Int
with:
  printer => true

;Used to represent the start of collecting binders for
;executing and action.
public defstruct ActionFrame <: StackFrame :
  num-values:Int
  encountered-failure?:True|False with: (updater => sub-encountered-failure?)
with:
  printer => true

